{"ast":null,"code":"'use strict';var React=require('react');var ReactDOM=require('react-dom');var createClass=require('create-react-class');var QuillMixin=require('./mixin');var find=require('lodash/find');var some=require('lodash/some');var isEqual=require('lodash/isEqual');var T=require('prop-types');var DOM=require('react-dom-factories');var QuillComponent=createClass({displayName:'Quill',mixins:[QuillMixin],propTypes:{id:T.string,className:T.string,theme:T.string,style:T.object,readOnly:T.bool,value:T.oneOfType([T.string,T.shape({ops:T.array})]),defaultValue:T.oneOfType([T.string,T.shape({ops:T.array})]),placeholder:T.string,tabIndex:T.number,bounds:T.oneOfType([T.string,T.element]),onChange:T.func,onChangeSelection:T.func,onFocus:T.func,onBlur:T.func,onKeyPress:T.func,onKeyDown:T.func,onKeyUp:T.func,preserveWhitespace:T.bool,modules:function modules(props){var isNotObject=T.object.apply(this,arguments);if(isNotObject)return isNotObject;if(props.modules&&props.modules.toolbar&&props.modules.toolbar[0]&&props.modules.toolbar[0].type)return new Error('Since v1.0.0, React Quill will not create a custom toolbar for you '+'anymore. Create a toolbar explictly, or let Quill create one. '+'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100');},toolbar:function toolbar(props){if('toolbar'in props)return new Error('The `toolbar` prop has been deprecated. Use `modules.toolbar` instead. '+'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100');},formats:function formats(props){var isNotArrayOfString=T.arrayOf(T.string).apply(this,arguments);if(isNotArrayOfString)return new Error('You cannot specify custom `formats` anymore. Use Parchment instead.  '+'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');},styles:function styles(props){if('styles'in props)return new Error('The `styles` prop has been deprecated. Use custom stylesheets instead. '+'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');},pollInterval:function pollInterval(props){if('pollInterval'in props)return new Error('The `pollInterval` property does not have any effect anymore. '+'You can safely remove it from your props.'+'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');},children:function children(props){// Validate that the editor has only one child element and it is not a <textarea>\nvar isNotASingleElement=T.element.apply(this,arguments);if(isNotASingleElement)return new Error('The Quill editing area can only be composed of a single React element.');if(React.Children.count(props.children)){var child=React.Children.only(props.children);if(child.type==='textarea')return new Error('Quill does not support editing on a <textarea>. Use a <div> instead.');}}},/*\n\tChanging one of these props should cause a full re-render.\n\t*/dirtyProps:['modules','formats','bounds','theme','children'],/*\n\tChanging one of these props should cause a regular update.\n\t*/cleanProps:['id','className','style','placeholder','tabIndex','onChange','onChangeSelection','onFocus','onBlur','onKeyPress','onKeyDown','onKeyUp'],getDefaultProps:function getDefaultProps(){return{theme:'snow',modules:{}};},/*\n\tWe consider the component to be controlled if `value` is being sent in props.\n\t*/isControlled:function isControlled(){return'value'in this.props;},getInitialState:function getInitialState(){return{generation:0,value:this.isControlled()?this.props.value:this.props.defaultValue};},componentWillReceiveProps:function componentWillReceiveProps(nextProps,nextState){var editor=this.editor;// If the component is unmounted and mounted too quickly\n// an error is thrown in setEditorContents since editor is\n// still undefined. Must check if editor is undefined\n// before performing this call.\nif(!editor)return;// Update only if we've been passed a new `value`.\n// This leaves components using `defaultValue` alone.\nif('value'in nextProps){var currentContents=this.getEditorContents();var nextContents=nextProps.value;if(nextContents===this.lastDeltaChangeSet)throw new Error('You are passing the `delta` object from the `onChange` event back '+'as `value`. You most probably want `editor.getContents()` instead. '+'See: https://github.com/zenoamaro/react-quill#using-deltas');// NOTE: Seeing that Quill is missing a way to prevent\n//       edits, we have to settle for a hybrid between\n//       controlled and uncontrolled mode. We can't prevent\n//       the change, but we'll still override content\n//       whenever `value` differs from current state.\n// NOTE: Comparing an HTML string and a Quill Delta will always trigger \n//       a change, regardless of whether they represent the same document.\nif(!this.isEqualValue(nextContents,currentContents)){this.setEditorContents(editor,nextContents);}}// We can update readOnly state in-place.\nif('readOnly'in nextProps){if(nextProps.readOnly!==this.props.readOnly){this.setEditorReadOnly(editor,nextProps.readOnly);}}// If we need to regenerate the component, we can avoid a detailed\n// in-place update step, and just let everything rerender.\nif(this.shouldComponentRegenerate(nextProps,nextState)){return this.regenerate();}},componentDidMount:function componentDidMount(){this.editor=this.createEditor(this.getEditingArea(),this.getEditorConfig());// Restore editor from Quill's native formats in regeneration scenario\nif(this.quillDelta){this.editor.setContents(this.quillDelta);this.editor.setSelection(this.quillSelection);this.editor.focus();this.quillDelta=this.quillSelection=null;return;}if(this.state.value){this.setEditorContents(this.editor,this.state.value);return;}},componentWillUnmount:function componentWillUnmount(){var editor;if(editor=this.getEditor()){this.unhookEditor(editor);this.editor=null;}},shouldComponentUpdate:function shouldComponentUpdate(nextProps,nextState){var self=this;// If the component has been regenerated, we already know we should update.\nif(this.state.generation!==nextState.generation){return true;}// Compare props that require React updating the DOM.\nreturn some(this.cleanProps,function(prop){// Note that `isEqual` compares deeply, making it safe to perform\n// non-immutable updates, at the cost of performance.\nreturn!isEqual(nextProps[prop],self.props[prop]);});},shouldComponentRegenerate:function shouldComponentRegenerate(nextProps,nextState){var self=this;// Whenever a `dirtyProp` changes, the editor needs reinstantiation.\nreturn some(this.dirtyProps,function(prop){// Note that `isEqual` compares deeply, making it safe to perform\n// non-immutable updates, at the cost of performance.\nreturn!isEqual(nextProps[prop],self.props[prop]);});},/*\n\tIf we could not update settings from the new props in-place, we have to tear\n\tdown everything and re-render from scratch.\n\t*/componentWillUpdate:function componentWillUpdate(nextProps,nextState){if(this.state.generation!==nextState.generation){this.componentWillUnmount();}},componentDidUpdate:function componentDidUpdate(prevProps,prevState){if(this.state.generation!==prevState.generation){this.componentDidMount();}},getEditorConfig:function getEditorConfig(){return{bounds:this.props.bounds,formats:this.props.formats,modules:this.props.modules,placeholder:this.props.placeholder,readOnly:this.props.readOnly,scrollingContainer:this.props.scrollingContainer,tabIndex:this.props.tabIndex,theme:this.props.theme};},getEditor:function getEditor(){return this.editor;},getEditingArea:function getEditingArea(){return ReactDOM.findDOMNode(this.editingArea);},getEditorContents:function getEditorContents(){return this.state.value;},getEditorSelection:function getEditorSelection(){return this.state.selection;},/*\n\tTrue if the value is a Delta instance or a Delta look-alike.\n\t*/isDelta:function isDelta(value){return value&&value.ops;},/*\n\tSpecial comparison function that knows how to compare Deltas.\n\t*/isEqualValue:function isEqualValue(value,nextValue){if(this.isDelta(value)&&this.isDelta(nextValue)){return isEqual(value.ops,nextValue.ops);}else{return isEqual(value,nextValue);}},/*\n\tRegenerating the editor will cause the whole tree, including the container,\n\tto be cleaned up and re-rendered from scratch.\n\t*/regenerate:function regenerate(){// Cache selection and contents in Quill's native format to be restored later\nthis.quillDelta=this.editor.getContents();this.quillSelection=this.editor.getSelection();this.setState({generation:this.state.generation+1});},/*\n\tRenders an editor area, unless it has been provided one to clone.\n\t*/renderEditingArea:function renderEditingArea(){var self=this;var children=this.props.children;var preserveWhitespace=this.props.preserveWhitespace;var properties={key:this.state.generation,tabIndex:this.props.tabIndex,ref:function ref(element){self.editingArea=element;}};var customElement=React.Children.count(children)?React.Children.only(children):null;var defaultElement=preserveWhitespace?DOM.pre:DOM.div;var editingArea=customElement?React.cloneElement(customElement,properties):defaultElement(properties);return editingArea;},render:function render(){return DOM.div({id:this.props.id,style:this.props.style,key:this.state.generation,className:['quill'].concat(this.props.className).join(' '),onKeyPress:this.props.onKeyPress,onKeyDown:this.props.onKeyDown,onKeyUp:this.props.onKeyUp},this.renderEditingArea());},onEditorChangeText:function onEditorChangeText(value,delta,source,editor){var currentContents=this.getEditorContents();// We keep storing the same type of value as what the user gives us,\n// so that value comparisons will be more stable and predictable.\nvar nextContents=this.isDelta(currentContents)?editor.getContents():editor.getHTML();if(!this.isEqualValue(nextContents,currentContents)){// Taint this `delta` object, so we can recognize whether the user\n// is trying to send it back as `value`, preventing a likely loop.\nthis.lastDeltaChangeSet=delta;this.setState({value:nextContents});if(this.props.onChange){this.props.onChange(value,delta,source,editor);}}},onEditorChangeSelection:function onEditorChangeSelection(nextSelection,source,editor){var currentSelection=this.getEditorSelection();var hasGainedFocus=!currentSelection&&nextSelection;var hasLostFocus=currentSelection&&!nextSelection;if(isEqual(nextSelection,currentSelection)){return;}this.setState({selection:nextSelection});if(this.props.onChangeSelection){this.props.onChangeSelection(nextSelection,source,editor);}if(hasGainedFocus&&this.props.onFocus){this.props.onFocus(nextSelection,source,editor);}else if(hasLostFocus&&this.props.onBlur){this.props.onBlur(currentSelection,source,editor);}},focus:function focus(){this.editor.focus();},blur:function blur(){this.setEditorSelection(this.editor,null);}});module.exports=QuillComponent;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/react-quill/lib/component.js"],"names":["React","require","ReactDOM","createClass","QuillMixin","find","some","isEqual","T","DOM","QuillComponent","displayName","mixins","propTypes","id","string","className","theme","style","object","readOnly","bool","value","oneOfType","shape","ops","array","defaultValue","placeholder","tabIndex","number","bounds","element","onChange","func","onChangeSelection","onFocus","onBlur","onKeyPress","onKeyDown","onKeyUp","preserveWhitespace","modules","props","isNotObject","apply","arguments","toolbar","type","Error","formats","isNotArrayOfString","arrayOf","styles","pollInterval","children","isNotASingleElement","Children","count","child","only","dirtyProps","cleanProps","getDefaultProps","isControlled","getInitialState","generation","componentWillReceiveProps","nextProps","nextState","editor","currentContents","getEditorContents","nextContents","lastDeltaChangeSet","isEqualValue","setEditorContents","setEditorReadOnly","shouldComponentRegenerate","regenerate","componentDidMount","createEditor","getEditingArea","getEditorConfig","quillDelta","setContents","setSelection","quillSelection","focus","state","componentWillUnmount","getEditor","unhookEditor","shouldComponentUpdate","self","prop","componentWillUpdate","componentDidUpdate","prevProps","prevState","scrollingContainer","findDOMNode","editingArea","getEditorSelection","selection","isDelta","nextValue","getContents","getSelection","setState","renderEditingArea","properties","key","ref","customElement","defaultElement","pre","div","cloneElement","render","concat","join","onEditorChangeText","delta","source","getHTML","onEditorChangeSelection","nextSelection","currentSelection","hasGainedFocus","hasLostFocus","blur","setEditorSelection","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar createClass = require('create-react-class');\nvar QuillMixin = require('./mixin');\nvar find = require('lodash/find');\nvar some = require('lodash/some');\nvar isEqual = require('lodash/isEqual');\nvar T = require('prop-types');\nvar DOM = require('react-dom-factories');\n\nvar QuillComponent = createClass({\n\n\tdisplayName: 'Quill',\n\n\tmixins: [ QuillMixin ],\n\n\tpropTypes: {\n\t\tid: T.string,\n\t\tclassName: T.string,\n\t\ttheme: T.string,\n\t\tstyle: T.object,\n\t\treadOnly: T.bool,\n\t\tvalue: T.oneOfType([T.string, T.shape({ops: T.array})]),\n\t\tdefaultValue: T.oneOfType([T.string, T.shape({ops: T.array})]),\n\t\tplaceholder: T.string,\n\t\ttabIndex: T.number,\n\t\tbounds: T.oneOfType([T.string, T.element]),\n\t\tonChange: T.func,\n\t\tonChangeSelection: T.func,\n\t\tonFocus: T.func,\n\t\tonBlur: T.func,\n\t\tonKeyPress: T.func,\n\t\tonKeyDown: T.func,\n\t\tonKeyUp: T.func,\n\t\tpreserveWhitespace: T.bool,\n\n\t\tmodules: function(props) {\n\t\t\tvar isNotObject = T.object.apply(this, arguments);\n\t\t\tif (isNotObject) return isNotObject;\n\n\t\t\tif (\n\t\t\t\tprops.modules && \n\t\t\t\tprops.modules.toolbar &&\n\t\t\t\tprops.modules.toolbar[0] &&\n\t\t\t\tprops.modules.toolbar[0].type\n\t\t\t) return new Error(\n\t\t\t\t'Since v1.0.0, React Quill will not create a custom toolbar for you ' +\n\t\t\t\t'anymore. Create a toolbar explictly, or let Quill create one. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100'\n\t\t\t);\n\t\t},\n\n\t\ttoolbar: function(props) {\n\t\t\tif ('toolbar' in props) return new Error(\n\t\t\t\t'The `toolbar` prop has been deprecated. Use `modules.toolbar` instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100'\n\t\t\t);\n\t\t},\n\n\t\tformats: function(props) {\n\t\t\tvar isNotArrayOfString = T.arrayOf(T.string).apply(this, arguments);\n\n\t\t\tif (isNotArrayOfString) return new Error(\n\t\t\t\t'You cannot specify custom `formats` anymore. Use Parchment instead.  ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tstyles: function(props) {\n\t\t\tif ('styles' in props) return new Error(\n\t\t\t\t'The `styles` prop has been deprecated. Use custom stylesheets instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tpollInterval: function(props) {\n\t\t\tif ('pollInterval' in props) return new Error(\n\t\t\t\t'The `pollInterval` property does not have any effect anymore. ' +\n\t\t\t\t'You can safely remove it from your props.' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tchildren: function(props) {\n\t\t\t// Validate that the editor has only one child element and it is not a <textarea>\n\t\t\tvar isNotASingleElement = T.element.apply(this, arguments);\n\t\t\tif (isNotASingleElement) return new Error(\n\t\t\t\t'The Quill editing area can only be composed of a single React element.'\n\t\t\t);\n\n\t\t\tif (React.Children.count(props.children)) {\n\t\t\t\tvar child = React.Children.only(props.children);\n\t\t\t\tif (child.type === 'textarea') return new Error(\n\t\t\t\t\t'Quill does not support editing on a <textarea>. Use a <div> instead.'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t\t\n\t/*\n\tChanging one of these props should cause a full re-render.\n\t*/\n\tdirtyProps: [\n\t\t'modules',\n\t\t'formats',\n\t\t'bounds',\n\t\t'theme',\n\t\t'children',\n\t],\n\n\t/*\n\tChanging one of these props should cause a regular update.\n\t*/\n\tcleanProps: [\n\t\t'id',\n\t\t'className',\n\t\t'style',\n\t\t'placeholder',\n\t\t'tabIndex',\n\t\t'onChange',\n\t\t'onChangeSelection',\n\t\t'onFocus',\n\t\t'onBlur',\n\t\t'onKeyPress',\n\t\t'onKeyDown',\n\t\t'onKeyUp',\n\t],\n\n\tgetDefaultProps: function() {\n\t\treturn {\n\t\t\ttheme: 'snow',\n\t\t\tmodules: {},\n\t\t};\n\t},\n\n\t/*\n\tWe consider the component to be controlled if `value` is being sent in props.\n\t*/\n\tisControlled: function() {\n\t\treturn 'value' in this.props;\n\t},\n\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tgeneration: 0,\n\t\t\tvalue: this.isControlled()\n\t\t\t\t? this.props.value\n\t\t\t\t: this.props.defaultValue\n\t\t};\n\t},\n\n\tcomponentWillReceiveProps: function(nextProps, nextState) {\n\t\tvar editor = this.editor;\n\n\t\t// If the component is unmounted and mounted too quickly\n\t\t// an error is thrown in setEditorContents since editor is\n\t\t// still undefined. Must check if editor is undefined\n\t\t// before performing this call.\n\t\tif (!editor) return;\n\t\t\n\t\t// Update only if we've been passed a new `value`.\n\t\t// This leaves components using `defaultValue` alone.\n\t\tif ('value' in nextProps) {\n\t\t\tvar currentContents = this.getEditorContents();\n\t\t\tvar nextContents = nextProps.value;\n\n\t\t\tif (nextContents === this.lastDeltaChangeSet) throw new Error(\n\t\t\t\t'You are passing the `delta` object from the `onChange` event back ' +\n\t\t\t\t'as `value`. You most probably want `editor.getContents()` instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#using-deltas'\n\t\t\t);\n\n\t\t\t// NOTE: Seeing that Quill is missing a way to prevent\n\t\t\t//       edits, we have to settle for a hybrid between\n\t\t\t//       controlled and uncontrolled mode. We can't prevent\n\t\t\t//       the change, but we'll still override content\n\t\t\t//       whenever `value` differs from current state.\n\t\t\t// NOTE: Comparing an HTML string and a Quill Delta will always trigger \n\t\t\t//       a change, regardless of whether they represent the same document.\n\t\t\tif (!this.isEqualValue(nextContents, currentContents)) {\n\t\t\t\tthis.setEditorContents(editor, nextContents);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// We can update readOnly state in-place.\n\t\tif ('readOnly' in nextProps) {\n\t\t\tif (nextProps.readOnly !== this.props.readOnly) {\n\t\t\t\tthis.setEditorReadOnly(editor, nextProps.readOnly);\n\t\t\t}\n\t\t}\n\n\t\t// If we need to regenerate the component, we can avoid a detailed\n\t\t// in-place update step, and just let everything rerender.\n\t\tif (this.shouldComponentRegenerate(nextProps, nextState)) {\n\t\t\treturn this.regenerate();\n\t\t}\n\t},\n\n\tcomponentDidMount: function() {\n\t\tthis.editor = this.createEditor(\n\t\t\tthis.getEditingArea(),\n\t\t\tthis.getEditorConfig()\n\t\t);\n\t\t// Restore editor from Quill's native formats in regeneration scenario\n\t\tif (this.quillDelta) {\n\t\t\tthis.editor.setContents(this.quillDelta);\n\t\t\tthis.editor.setSelection(this.quillSelection);\t\t\n\t\t\tthis.editor.focus();\n\t\t\tthis.quillDelta = this.quillSelection = null;\n\t\t\treturn;\n\t\t}\n\t\tif (this.state.value) {\n\t\t\tthis.setEditorContents(this.editor, this.state.value);\n\t\t\treturn;\n\t\t}\n\t},\n\n\tcomponentWillUnmount: function() {\n\t\tvar editor; if ((editor = this.getEditor())) {\n\t\t\tthis.unhookEditor(editor);\n\t\t\tthis.editor = null;\n\t\t}\n\t},\n\n\tshouldComponentUpdate: function(nextProps, nextState) {\n\t\tvar self = this;\n\n\t\t// If the component has been regenerated, we already know we should update.\n\t\tif (this.state.generation !== nextState.generation) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// Compare props that require React updating the DOM.\n\t\treturn some(this.cleanProps, function(prop) {\n\t\t\t// Note that `isEqual` compares deeply, making it safe to perform\n\t\t\t// non-immutable updates, at the cost of performance.\n\t\t\treturn !isEqual(nextProps[prop], self.props[prop]);\n\t\t});\n\t},\n\n\tshouldComponentRegenerate: function(nextProps, nextState) {\n\t\tvar self = this;\n\t\t// Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n\t\treturn some(this.dirtyProps, function(prop) {\n\t\t\t// Note that `isEqual` compares deeply, making it safe to perform\n\t\t\t// non-immutable updates, at the cost of performance.\n\t\t\treturn !isEqual(nextProps[prop], self.props[prop]);\n\t\t});\n\t},\n\n\t/*\n\tIf we could not update settings from the new props in-place, we have to tear\n\tdown everything and re-render from scratch.\n\t*/\n\tcomponentWillUpdate: function(nextProps, nextState) {\n\t\tif (this.state.generation !== nextState.generation) {\n\t\t\tthis.componentWillUnmount();\n\t\t}\n\t},\n\n\tcomponentDidUpdate: function(prevProps, prevState) {\n\t\tif (this.state.generation !== prevState.generation) {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t},\n\n\tgetEditorConfig: function() {\n\t\treturn {\n\t\t\tbounds:       this.props.bounds,\n\t\t\tformats:      this.props.formats,\n\t\t\tmodules:      this.props.modules,\n\t\t\tplaceholder:  this.props.placeholder,\n\t\t\treadOnly:     this.props.readOnly,\n      \t\t\tscrollingContainer: this.props.scrollingContainer,\n\t\t\ttabIndex:     this.props.tabIndex,\n\t\t\ttheme:        this.props.theme,\n\t\t};\n\t},\n\n\tgetEditor: function() {\n\t\treturn this.editor;\n\t},\n\n\tgetEditingArea: function () {\n\t\treturn ReactDOM.findDOMNode(this.editingArea);\n\t},\n\n\tgetEditorContents: function() {\n\t\treturn this.state.value;\n\t},\n\n\tgetEditorSelection: function() {\n\t\treturn this.state.selection;\n\t},\n\n\t/*\n\tTrue if the value is a Delta instance or a Delta look-alike.\n\t*/\n\tisDelta: function(value) {\n\t\treturn value && value.ops;\n\t},\n\n\t/*\n\tSpecial comparison function that knows how to compare Deltas.\n\t*/\n\tisEqualValue: function(value, nextValue) {\n\t\tif (this.isDelta(value) && this.isDelta(nextValue)) {\n\t\t\treturn isEqual(value.ops, nextValue.ops);\n\t\t} else {\n\t\t\treturn isEqual(value, nextValue);\n\t\t}\n\t},\n\n\t/*\n\tRegenerating the editor will cause the whole tree, including the container,\n\tto be cleaned up and re-rendered from scratch.\n\t*/\n\tregenerate: function() {\n\t\t// Cache selection and contents in Quill's native format to be restored later\n\t\tthis.quillDelta = this.editor.getContents();\n\t\tthis.quillSelection = this.editor.getSelection();\n\t\tthis.setState({\n\t\t\tgeneration: this.state.generation + 1,\n\t\t});\n\t},\n\n\t/*\n\tRenders an editor area, unless it has been provided one to clone.\n\t*/\n\trenderEditingArea: function() {\n\t\tvar self = this;\n\t\tvar children = this.props.children;\n\t\tvar preserveWhitespace = this.props.preserveWhitespace;\n\n\t\tvar properties = {\n\t\t\tkey: this.state.generation,\n\t\t\ttabIndex: this.props.tabIndex,\n\t\t\tref: function(element) { self.editingArea = element },\n\t\t};\n\n\t\tvar customElement = React.Children.count(children)\n\t\t\t? React.Children.only(children)\n\t\t\t: null;\n\t\tvar defaultElement = preserveWhitespace ? DOM.pre : DOM.div;\n\t\tvar editingArea = customElement\n\t\t\t? React.cloneElement(customElement, properties)\n\t\t\t: defaultElement(properties);\n\n\t\treturn editingArea;\n\t},\n\n\trender: function() {\n\t\treturn DOM.div({\n\t\t\tid: this.props.id,\n\t\t\tstyle: this.props.style,\n\t\t\tkey: this.state.generation,\n\t\t\tclassName: ['quill'].concat(this.props.className).join(' '),\n\t\t\tonKeyPress: this.props.onKeyPress,\n\t\t\tonKeyDown: this.props.onKeyDown,\n\t\t\tonKeyUp: this.props.onKeyUp },\n\t\t\tthis.renderEditingArea()\n\t\t);\n\t},\n\n\tonEditorChangeText: function(value, delta, source, editor) {\n\t\tvar currentContents = this.getEditorContents();\n\n\t\t// We keep storing the same type of value as what the user gives us,\n\t\t// so that value comparisons will be more stable and predictable.\n\t\tvar nextContents = this.isDelta(currentContents)\n\t\t\t? editor.getContents()\n\t\t\t: editor.getHTML();\n\t\t\n\t\tif (!this.isEqualValue(nextContents, currentContents)) {\n\t\t\t// Taint this `delta` object, so we can recognize whether the user\n\t\t\t// is trying to send it back as `value`, preventing a likely loop.\n\t\t\tthis.lastDeltaChangeSet = delta;\n\n\t\t\tthis.setState({ value: nextContents });\n\n\t\t\tif (this.props.onChange) {\n\t\t\t\tthis.props.onChange(value, delta, source, editor);\n\t\t\t}\n\t\t}\n\t},\n\n\tonEditorChangeSelection: function(nextSelection, source, editor) {\n\t\tvar currentSelection = this.getEditorSelection();\n\t\tvar hasGainedFocus = !currentSelection && nextSelection;\n\t\tvar hasLostFocus = currentSelection && !nextSelection;\n\n\t\tif (isEqual(nextSelection, currentSelection)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.setState({ selection: nextSelection });\n\t\t\n\t\tif (this.props.onChangeSelection) {\n\t\t\tthis.props.onChangeSelection(nextSelection, source, editor);\n\t\t}\n\n\t\tif (hasGainedFocus && this.props.onFocus) {\n\t\t\tthis.props.onFocus(nextSelection, source, editor);\n\t\t} else if (hasLostFocus && this.props.onBlur) {\n\t\t\tthis.props.onBlur(currentSelection, source, editor);\n\t\t}\n\t},\n\n\tfocus: function() {\n\t\tthis.editor.focus();\n\t},\n\n\tblur: function() {\n\t\tthis.setEditorSelection(this.editor, null);\n\t}\n\n});\n\nmodule.exports = QuillComponent;\n"]},"metadata":{},"sourceType":"module"}