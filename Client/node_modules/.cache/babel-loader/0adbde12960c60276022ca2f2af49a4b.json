{"ast":null,"code":"/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */function overArg(func,transform){return function(arg){return func(transform(arg));};}module.exports=overArg;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_overArg.js"],"names":["overArg","func","transform","arg","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASA,CAAAA,OAAT,CAAiBC,IAAjB,CAAuBC,SAAvB,CAAkC,CAChC,MAAO,UAASC,GAAT,CAAc,CACnB,MAAOF,CAAAA,IAAI,CAACC,SAAS,CAACC,GAAD,CAAV,CAAX,CACD,CAFD,CAGD,CAEDC,MAAM,CAACC,OAAP,CAAiBL,OAAjB","sourcesContent":["/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n"]},"metadata":{},"sourceType":"module"}