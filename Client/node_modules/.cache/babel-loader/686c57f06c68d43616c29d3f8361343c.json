{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\ecommerce project\\\\ecommerce\\\\ecommerce-app\\\\src\\\\components\\\\StripeCheckout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPaymentIntent } from '../functions/stripe';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckout = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    createPaymentIntent(user.token).then(res => {\n      console.log('hey');\n      console.log('create payment intent', res);\n      setClientSecret(res.data.clientSecret);\n    });\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: e.target.name.value\n        }\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      console.log(JSON.stringify(payload, null, 4));\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    } //\n\n  };\n\n  const handleChange = async e => {\n    setDisabled(e.empty);\n    setError(e.error ? e.error.message : \"\"); //\n  };\n\n  const cartStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: succeeded ? \"result-message\" : \"result-message hidden\",\n      children: [\"Payment Successful.\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user/history\",\n        children: \" See it on your purchase history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      className: \"stripe-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        options: cartStyle,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stripe-button\",\n        disabled: processing || succeeded || disabled,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"button-text\",\n          children: processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            id: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 31\n          }, this) : \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-error\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StripeCheckout, \"CCLX1nYrpjaht38G8Qmi8jYMlkU=\", false, function () {\n  return [useDispatch, useSelector, useStripe, useElements];\n});\n\n_c = StripeCheckout;\nexport default StripeCheckout;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckout\");","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/src/components/StripeCheckout.js"],"names":["React","useEffect","useState","CardElement","useStripe","useElements","useDispatch","useSelector","createPaymentIntent","Link","StripeCheckout","dispatch","user","state","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","token","then","res","console","log","data","handleSubmit","e","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","billing_details","name","target","value","message","JSON","stringify","handleChange","empty","cartStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAqBC,SAArB,EAA+BC,WAA/B,QAAkD,yBAAlD;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAACL,WAAW,EAA1B;AACA,QAAM;AAACM,IAAAA;AAAD,MAAOL,WAAW,CAAEM,KAAD,KAAU,EAAC,GAAGA;AAAJ,GAAV,CAAD,CAAxB;AAEA,QAAK,CAACC,SAAD,EAAWC,YAAX,IAAyBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAK,CAACc,KAAD,EAAOC,QAAP,IAAiBf,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAK,CAACgB,UAAD,EAAYC,aAAZ,IAA2BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAK,CAACkB,QAAD,EAAUC,WAAV,IAAuBnB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAK,CAACoB,YAAD,EAAcC,eAAd,IAA+BrB,QAAQ,CAAC,EAAD,CAA5C;AACG,QAAMsB,MAAM,GAACpB,SAAS,EAAtB;AACA,QAAMqB,QAAQ,GAACpB,WAAW,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,mBAAmB,CAACI,IAAI,CAACc,KAAN,CAAnB,CACCC,IADD,CACMC,GAAG,IAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCF,GAApC;AACAL,MAAAA,eAAe,CAACK,GAAG,CAACG,IAAJ,CAAST,YAAV,CAAf;AACH,KALD;AAMH,GAPQ,EAOP,EAPO,CAAT;;AASA,QAAMU,YAAY,GAAC,MAAMC,CAAN,IAAU;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAMgB,OAAO,GAAC,MAAMX,MAAM,CAACY,kBAAP,CAA0Bd,YAA1B,EAAuC;AACzDe,MAAAA,cAAc,EAAC;AACbC,QAAAA,IAAI,EAACb,QAAQ,CAACc,UAAT,CAAoBpC,WAApB,CADQ;AAEbqC,QAAAA,eAAe,EAAC;AACdC,UAAAA,IAAI,EAAER,CAAC,CAACS,MAAF,CAASD,IAAT,CAAcE;AADN;AAFH;AAD0C,KAAvC,CAApB;;AAUA,QAAGR,OAAO,CAACnB,KAAX,EAAiB;AACfC,MAAAA,QAAQ,CAAE,kBAAiBkB,OAAO,CAACnB,KAAR,CAAc4B,OAAQ,EAAzC,CAAR;AACAzB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHD,MAII;AACFU,MAAAA,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACC,SAAL,CAAeX,OAAf,EAAuB,IAAvB,EAA4B,CAA5B,CAAZ;AACAlB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAtB0B,CAuBzB;;AACH,GAxBD;;AAyBA,QAAMgC,YAAY,GAAC,MAAMd,CAAN,IAAU;AAE3BZ,IAAAA,WAAW,CAACY,CAAC,CAACe,KAAH,CAAX;AACA/B,IAAAA,QAAQ,CAACgB,CAAC,CAACjB,KAAF,GAAQiB,CAAC,CAACjB,KAAF,CAAQ4B,OAAhB,GAAwB,EAAzB,CAAR,CAH2B,CAIzB;AACH,GALD;;AAMA,QAAMK,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,UAAU,EAAE,mBAFR;AAGJC,QAAAA,aAAa,EAAE,aAHX;AAIJC,QAAAA,QAAQ,EAAE,MAJN;AAKJ,yBAAiB;AACfH,UAAAA,KAAK,EAAE;AADQ;AALb,OADD;AAULI,MAAAA,OAAO,EAAE;AACPJ,QAAAA,KAAK,EAAE,SADA;AAEPK,QAAAA,SAAS,EAAE;AAFJ;AAVJ;AADO,GAAlB;AAkBA,sBACI;AAAA,4BACA;AAAG,MAAA,SAAS,EAAE3C,SAAS,GAAC,gBAAD,GAAmB,uBAA1C;AAAA,wCACsB,GADtB,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKC;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,SAAS,EAAC,aAAlC;AAAgD,MAAA,QAAQ,EAAEkB,YAA1D;AAAA,8BACI,QAAC,WAAD;AACA,QAAA,EAAE,EAAC,cADH;AAEA,QAAA,OAAO,EAAEiB,SAFT;AAGA,QAAA,QAAQ,EAAEF;AAHV;AAAA;AAAA;AAAA;AAAA,cADJ,eAMC;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,QAAQ,EAAE7B,UAAU,IAAIJ,SAAd,IAA2BM,QAAvE;AAAA,+BAEI;AAAM,UAAA,EAAE,EAAC,aAAT;AAAA,oBACKF,UAAU,gBAAC;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,EAAE,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAAD,GAA8C;AAD7D;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAND,EAYAF,KAAK,iBACJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,IAAI,EAAC,OAAjC;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADJ;AA4BH,CAlGD;;GAAMN,c;UACUJ,W,EACFC,W,EAOGH,S,EACEC,W;;;KAVbK,c;AAoGN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CardElement,useStripe,useElements } from '@stripe/react-stripe-js'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { createPaymentIntent } from '../functions/stripe'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst StripeCheckout = () => {\r\n const dispatch=useDispatch();\r\n const {user}=useSelector((state)=>({...state}))\r\n\r\n const[succeeded,setSucceeded]=useState(false)\r\n const[error,setError]=useState(null)\r\n const[processing,setProcessing]=useState(false)\r\n const[disabled,setDisabled]=useState(true)\r\n const[clientSecret,setClientSecret]=useState(\"\")\r\n    const stripe=useStripe();\r\n    const elements=useElements();\r\n\r\n    useEffect(()=>{\r\n        createPaymentIntent(user.token)\r\n        .then(res=>{\r\n            console.log('hey')\r\n            console.log('create payment intent',res)\r\n            setClientSecret(res.data.clientSecret)\r\n        })\r\n    },[])\r\n\r\n    const handleSubmit=async(e)=>{\r\n      e.preventDefault()\r\n      setProcessing(true)\r\n      const payload=await stripe.confirmCardPayment(clientSecret,{\r\n        payment_method:{\r\n          card:elements.getElement(CardElement),\r\n          billing_details:{\r\n            name: e.target.name.value\r\n          },\r\n        },\r\n\r\n      })\r\n\r\n      if(payload.error){\r\n        setError(`Payment failed ${payload.error.message}`)\r\n        setProcessing(false)\r\n      }\r\n      else{\r\n        console.log(JSON.stringify(payload,null,4));\r\n        setError(null);\r\n        setProcessing(false)\r\n        setSucceeded(true)\r\n      }\r\n        //\r\n    }\r\n    const handleChange=async(e)=>{\r\n\r\n      setDisabled(e.empty)\r\n      setError(e.error?e.error.message:\"\")\r\n        //\r\n    }\r\n    const cartStyle = {\r\n        style: {\r\n          base: {\r\n            color: \"#32325d\",\r\n            fontFamily: \"Arial, sans-serif\",\r\n            fontSmoothing: \"antialiased\",\r\n            fontSize: \"16px\",\r\n            \"::placeholder\": {\r\n              color: \"#32325d\",\r\n            },\r\n          },\r\n          invalid: {\r\n            color: \"#fa755a\",\r\n            iconColor: \"#fa755a\",\r\n          },\r\n        },\r\n      };\r\n\r\n    return (\r\n        <>\r\n        <p className={succeeded?\"result-message\": \"result-message hidden\"}>\r\n          Payment Successful.{\" \"}\r\n          <Link to='/user/history'> See it on your purchase history</Link>\r\n        </p>\r\n         <form id='payment-form' className='stripe-form' onSubmit={handleSubmit}>\r\n             <CardElement \r\n             id='card-element'\r\n             options={cartStyle}\r\n             onChange={handleChange}\r\n             />\r\n          <button className='stripe-button' disabled={processing || succeeded || disabled}>\r\n\r\n              <span id='button-text'>\r\n                  {processing?<div className='spinner' id='spinner'></div>:\"Pay\"}\r\n              </span>\r\n          </button>\r\n        {error && (\r\n          <div className='card-error' role='alert'>\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n         </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default StripeCheckout"]},"metadata":{},"sourceType":"module"}