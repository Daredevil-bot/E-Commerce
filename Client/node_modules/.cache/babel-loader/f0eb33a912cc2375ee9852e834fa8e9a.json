{"ast":null,"code":"var baseMatches=require('./_baseMatches'),baseMatchesProperty=require('./_baseMatchesProperty'),identity=require('./identity'),isArray=require('./isArray'),property=require('./property');/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\nif(typeof value=='function'){return value;}if(value==null){return identity;}if(typeof value=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}module.exports=baseIteratee;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_baseIteratee.js"],"names":["baseMatches","require","baseMatchesProperty","identity","isArray","property","baseIteratee","value","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,WAAW,CAAGC,OAAO,CAAC,gBAAD,CAAzB,CACIC,mBAAmB,CAAGD,OAAO,CAAC,wBAAD,CADjC,CAEIE,QAAQ,CAAGF,OAAO,CAAC,YAAD,CAFtB,CAGIG,OAAO,CAAGH,OAAO,CAAC,WAAD,CAHrB,CAIII,QAAQ,CAAGJ,OAAO,CAAC,YAAD,CAJtB,CAMA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASK,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B;AACA;AACA,GAAI,MAAOA,CAAAA,KAAP,EAAgB,UAApB,CAAgC,CAC9B,MAAOA,CAAAA,KAAP,CACD,CACD,GAAIA,KAAK,EAAI,IAAb,CAAmB,CACjB,MAAOJ,CAAAA,QAAP,CACD,CACD,GAAI,MAAOI,CAAAA,KAAP,EAAgB,QAApB,CAA8B,CAC5B,MAAOH,CAAAA,OAAO,CAACG,KAAD,CAAP,CACHL,mBAAmB,CAACK,KAAK,CAAC,CAAD,CAAN,CAAWA,KAAK,CAAC,CAAD,CAAhB,CADhB,CAEHP,WAAW,CAACO,KAAD,CAFf,CAGD,CACD,MAAOF,CAAAA,QAAQ,CAACE,KAAD,CAAf,CACD,CAEDC,MAAM,CAACC,OAAP,CAAiBH,YAAjB","sourcesContent":["var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n"]},"metadata":{},"sourceType":"module"}