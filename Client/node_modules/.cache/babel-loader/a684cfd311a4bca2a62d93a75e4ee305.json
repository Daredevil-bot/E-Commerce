{"ast":null,"code":"var memoizeCapped=require('./_memoizeCapped');/** Used to match property names within property paths. */var rePropName=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;/** Used to match backslashes in property paths. */var reEscapeChar=/\\\\(\\\\)?/g;/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46/* . */){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});module.exports=stringToPath;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_stringToPath.js"],"names":["memoizeCapped","require","rePropName","reEscapeChar","stringToPath","string","result","charCodeAt","push","replace","match","number","quote","subString","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,aAAa,CAAGC,OAAO,CAAC,kBAAD,CAA3B,CAEA,0DACA,GAAIC,CAAAA,UAAU,CAAG,kGAAjB,CAEA,mDACA,GAAIC,CAAAA,YAAY,CAAG,UAAnB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAIC,CAAAA,YAAY,CAAGJ,aAAa,CAAC,SAASK,MAAT,CAAiB,CAChD,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAID,MAAM,CAACE,UAAP,CAAkB,CAAlB,IAAyB,EAAG,OAAhC,CAAyC,CACvCD,MAAM,CAACE,IAAP,CAAY,EAAZ,EACD,CACDH,MAAM,CAACI,OAAP,CAAeP,UAAf,CAA2B,SAASQ,KAAT,CAAgBC,MAAhB,CAAwBC,KAAxB,CAA+BC,SAA/B,CAA0C,CACnEP,MAAM,CAACE,IAAP,CAAYI,KAAK,CAAGC,SAAS,CAACJ,OAAV,CAAkBN,YAAlB,CAAgC,IAAhC,CAAH,CAA4CQ,MAAM,EAAID,KAAvE,EACD,CAFD,EAGA,MAAOJ,CAAAA,MAAP,CACD,CAT+B,CAAhC,CAWAQ,MAAM,CAACC,OAAP,CAAiBX,YAAjB","sourcesContent":["var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n"]},"metadata":{},"sourceType":"module"}