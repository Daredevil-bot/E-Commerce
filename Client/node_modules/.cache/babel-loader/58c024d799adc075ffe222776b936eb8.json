{"ast":null,"code":"var ListCache=require('./_ListCache'),stackClear=require('./_stackClear'),stackDelete=require('./_stackDelete'),stackGet=require('./_stackGet'),stackHas=require('./_stackHas'),stackSet=require('./_stackSet');/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}// Add methods to `Stack`.\nStack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;module.exports=Stack;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_Stack.js"],"names":["ListCache","require","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","entries","data","__data__","size","prototype","clear","get","has","set","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,SAAS,CAAGC,OAAO,CAAC,cAAD,CAAvB,CACIC,UAAU,CAAGD,OAAO,CAAC,eAAD,CADxB,CAEIE,WAAW,CAAGF,OAAO,CAAC,gBAAD,CAFzB,CAGIG,QAAQ,CAAGH,OAAO,CAAC,aAAD,CAHtB,CAIII,QAAQ,CAAGJ,OAAO,CAAC,aAAD,CAJtB,CAKIK,QAAQ,CAAGL,OAAO,CAAC,aAAD,CALtB,CAOA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASM,CAAAA,KAAT,CAAeC,OAAf,CAAwB,CACtB,GAAIC,CAAAA,IAAI,CAAG,KAAKC,QAAL,CAAgB,GAAIV,CAAAA,SAAJ,CAAcQ,OAAd,CAA3B,CACA,KAAKG,IAAL,CAAYF,IAAI,CAACE,IAAjB,CACD,CAED;AACAJ,KAAK,CAACK,SAAN,CAAgBC,KAAhB,CAAwBX,UAAxB,CACAK,KAAK,CAACK,SAAN,CAAgB,QAAhB,EAA4BT,WAA5B,CACAI,KAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAsBV,QAAtB,CACAG,KAAK,CAACK,SAAN,CAAgBG,GAAhB,CAAsBV,QAAtB,CACAE,KAAK,CAACK,SAAN,CAAgBI,GAAhB,CAAsBV,QAAtB,CAEAW,MAAM,CAACC,OAAP,CAAiBX,KAAjB","sourcesContent":["var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n"]},"metadata":{},"sourceType":"module"}