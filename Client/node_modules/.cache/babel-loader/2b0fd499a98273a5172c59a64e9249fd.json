{"ast":null,"code":"var isArray=require('./isArray'),isSymbol=require('./isSymbol');/** Used to match property names within property paths. */var reIsDeepProp=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,reIsPlainProp=/^\\w*$/;/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value;if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}module.exports=isKey;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_isKey.js"],"names":["isArray","require","isSymbol","reIsDeepProp","reIsPlainProp","isKey","value","object","type","test","Object","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,OAAO,CAAGC,OAAO,CAAC,WAAD,CAArB,CACIC,QAAQ,CAAGD,OAAO,CAAC,YAAD,CADtB,CAGA,0DACA,GAAIE,CAAAA,YAAY,CAAG,kDAAnB,CACIC,aAAa,CAAG,OADpB,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8B,CAC5B,GAAIP,OAAO,CAACM,KAAD,CAAX,CAAoB,CAClB,MAAO,MAAP,CACD,CACD,GAAIE,CAAAA,IAAI,CAAG,MAAOF,CAAAA,KAAlB,CACA,GAAIE,IAAI,EAAI,QAAR,EAAoBA,IAAI,EAAI,QAA5B,EAAwCA,IAAI,EAAI,SAAhD,EACAF,KAAK,EAAI,IADT,EACiBJ,QAAQ,CAACI,KAAD,CAD7B,CACsC,CACpC,MAAO,KAAP,CACD,CACD,MAAOF,CAAAA,aAAa,CAACK,IAAd,CAAmBH,KAAnB,GAA6B,CAACH,YAAY,CAACM,IAAb,CAAkBH,KAAlB,CAA9B,EACJC,MAAM,EAAI,IAAV,EAAkBD,KAAK,GAAII,CAAAA,MAAM,CAACH,MAAD,CADpC,CAED,CAEDI,MAAM,CAACC,OAAP,CAAiBP,KAAjB","sourcesContent":["var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n"]},"metadata":{},"sourceType":"module"}