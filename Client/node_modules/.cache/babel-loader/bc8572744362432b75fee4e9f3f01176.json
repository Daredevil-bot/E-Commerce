{"ast":null,"code":"/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return-1;}module.exports=baseFindIndex;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_baseFindIndex.js"],"names":["baseFindIndex","array","predicate","fromIndex","fromRight","length","index","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASA,CAAAA,aAAT,CAAuBC,KAAvB,CAA8BC,SAA9B,CAAyCC,SAAzC,CAAoDC,SAApD,CAA+D,CAC7D,GAAIC,CAAAA,MAAM,CAAGJ,KAAK,CAACI,MAAnB,CACIC,KAAK,CAAGH,SAAS,EAAIC,SAAS,CAAG,CAAH,CAAO,CAAC,CAArB,CADrB,CAGA,MAAQA,SAAS,CAAGE,KAAK,EAAR,CAAa,EAAEA,KAAF,CAAUD,MAAxC,CAAiD,CAC/C,GAAIH,SAAS,CAACD,KAAK,CAACK,KAAD,CAAN,CAAeA,KAAf,CAAsBL,KAAtB,CAAb,CAA2C,CACzC,MAAOK,CAAAA,KAAP,CACD,CACF,CACD,MAAO,CAAC,CAAR,CACD,CAEDC,MAAM,CAACC,OAAP,CAAiBR,aAAjB","sourcesContent":["/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n"]},"metadata":{},"sourceType":"module"}