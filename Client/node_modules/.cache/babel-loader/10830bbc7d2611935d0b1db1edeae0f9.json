{"ast":null,"code":"var isArrayLike=require('./isArrayLike');/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}module.exports=createBaseEach;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_createBaseEach.js"],"names":["isArrayLike","require","createBaseEach","eachFunc","fromRight","collection","iteratee","length","index","iterable","Object","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,WAAW,CAAGC,OAAO,CAAC,eAAD,CAAzB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,cAAT,CAAwBC,QAAxB,CAAkCC,SAAlC,CAA6C,CAC3C,MAAO,UAASC,UAAT,CAAqBC,QAArB,CAA+B,CACpC,GAAID,UAAU,EAAI,IAAlB,CAAwB,CACtB,MAAOA,CAAAA,UAAP,CACD,CACD,GAAI,CAACL,WAAW,CAACK,UAAD,CAAhB,CAA8B,CAC5B,MAAOF,CAAAA,QAAQ,CAACE,UAAD,CAAaC,QAAb,CAAf,CACD,CACD,GAAIC,CAAAA,MAAM,CAAGF,UAAU,CAACE,MAAxB,CACIC,KAAK,CAAGJ,SAAS,CAAGG,MAAH,CAAY,CAAC,CADlC,CAEIE,QAAQ,CAAGC,MAAM,CAACL,UAAD,CAFrB,CAIA,MAAQD,SAAS,CAAGI,KAAK,EAAR,CAAa,EAAEA,KAAF,CAAUD,MAAxC,CAAiD,CAC/C,GAAID,QAAQ,CAACG,QAAQ,CAACD,KAAD,CAAT,CAAkBA,KAAlB,CAAyBC,QAAzB,CAAR,GAA+C,KAAnD,CAA0D,CACxD,MACD,CACF,CACD,MAAOJ,CAAAA,UAAP,CACD,CAjBD,CAkBD,CAEDM,MAAM,CAACC,OAAP,CAAiBV,cAAjB","sourcesContent":["var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n"]},"metadata":{},"sourceType":"module"}