{"ast":null,"code":"var hashClear=require('./_hashClear'),hashDelete=require('./_hashDelete'),hashGet=require('./_hashGet'),hashHas=require('./_hashHas'),hashSet=require('./_hashSet');/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}// Add methods to `Hash`.\nHash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;module.exports=Hash;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_Hash.js"],"names":["hashClear","require","hashDelete","hashGet","hashHas","hashSet","Hash","entries","index","length","clear","entry","set","prototype","get","has","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,SAAS,CAAGC,OAAO,CAAC,cAAD,CAAvB,CACIC,UAAU,CAAGD,OAAO,CAAC,eAAD,CADxB,CAEIE,OAAO,CAAGF,OAAO,CAAC,YAAD,CAFrB,CAGIG,OAAO,CAAGH,OAAO,CAAC,YAAD,CAHrB,CAIII,OAAO,CAAGJ,OAAO,CAAC,YAAD,CAJrB,CAMA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASK,CAAAA,IAAT,CAAcC,OAAd,CAAuB,CACrB,GAAIC,CAAAA,KAAK,CAAG,CAAC,CAAb,CACIC,MAAM,CAAGF,OAAO,EAAI,IAAX,CAAkB,CAAlB,CAAsBA,OAAO,CAACE,MAD3C,CAGA,KAAKC,KAAL,GACA,MAAO,EAAEF,KAAF,CAAUC,MAAjB,CAAyB,CACvB,GAAIE,CAAAA,KAAK,CAAGJ,OAAO,CAACC,KAAD,CAAnB,CACA,KAAKI,GAAL,CAASD,KAAK,CAAC,CAAD,CAAd,CAAmBA,KAAK,CAAC,CAAD,CAAxB,EACD,CACF,CAED;AACAL,IAAI,CAACO,SAAL,CAAeH,KAAf,CAAuBV,SAAvB,CACAM,IAAI,CAACO,SAAL,CAAe,QAAf,EAA2BX,UAA3B,CACAI,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAqBX,OAArB,CACAG,IAAI,CAACO,SAAL,CAAeE,GAAf,CAAqBX,OAArB,CACAE,IAAI,CAACO,SAAL,CAAeD,GAAf,CAAqBP,OAArB,CAEAW,MAAM,CAACC,OAAP,CAAiBX,IAAjB","sourcesContent":["var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n"]},"metadata":{},"sourceType":"module"}