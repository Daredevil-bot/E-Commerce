{"ast":null,"code":"var listCacheClear=require('./_listCacheClear'),listCacheDelete=require('./_listCacheDelete'),listCacheGet=require('./_listCacheGet'),listCacheHas=require('./_listCacheHas'),listCacheSet=require('./_listCacheSet');/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}// Add methods to `ListCache`.\nListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;module.exports=ListCache;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_ListCache.js"],"names":["listCacheClear","require","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","clear","entry","set","prototype","get","has","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,cAAc,CAAGC,OAAO,CAAC,mBAAD,CAA5B,CACIC,eAAe,CAAGD,OAAO,CAAC,oBAAD,CAD7B,CAEIE,YAAY,CAAGF,OAAO,CAAC,iBAAD,CAF1B,CAGIG,YAAY,CAAGH,OAAO,CAAC,iBAAD,CAH1B,CAIII,YAAY,CAAGJ,OAAO,CAAC,iBAAD,CAJ1B,CAMA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASK,CAAAA,SAAT,CAAmBC,OAAnB,CAA4B,CAC1B,GAAIC,CAAAA,KAAK,CAAG,CAAC,CAAb,CACIC,MAAM,CAAGF,OAAO,EAAI,IAAX,CAAkB,CAAlB,CAAsBA,OAAO,CAACE,MAD3C,CAGA,KAAKC,KAAL,GACA,MAAO,EAAEF,KAAF,CAAUC,MAAjB,CAAyB,CACvB,GAAIE,CAAAA,KAAK,CAAGJ,OAAO,CAACC,KAAD,CAAnB,CACA,KAAKI,GAAL,CAASD,KAAK,CAAC,CAAD,CAAd,CAAmBA,KAAK,CAAC,CAAD,CAAxB,EACD,CACF,CAED;AACAL,SAAS,CAACO,SAAV,CAAoBH,KAApB,CAA4BV,cAA5B,CACAM,SAAS,CAACO,SAAV,CAAoB,QAApB,EAAgCX,eAAhC,CACAI,SAAS,CAACO,SAAV,CAAoBC,GAApB,CAA0BX,YAA1B,CACAG,SAAS,CAACO,SAAV,CAAoBE,GAApB,CAA0BX,YAA1B,CACAE,SAAS,CAACO,SAAV,CAAoBD,GAApB,CAA0BP,YAA1B,CAEAW,MAAM,CAACC,OAAP,CAAiBX,SAAjB","sourcesContent":["var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n"]},"metadata":{},"sourceType":"module"}