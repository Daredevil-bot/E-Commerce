{"ast":null,"code":"var Stack=require('./_Stack'),baseIsEqual=require('./_baseIsEqual');/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return!length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false;}}else{var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}module.exports=baseIsMatch;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_baseIsMatch.js"],"names":["Stack","require","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","object","source","matchData","customizer","index","length","noCustomizer","Object","data","key","objValue","srcValue","undefined","stack","result","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,KAAK,CAAGC,OAAO,CAAC,UAAD,CAAnB,CACIC,WAAW,CAAGD,OAAO,CAAC,gBAAD,CADzB,CAGA,sDACA,GAAIE,CAAAA,oBAAoB,CAAG,CAA3B,CACIC,sBAAsB,CAAG,CAD7B,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,WAAT,CAAqBC,MAArB,CAA6BC,MAA7B,CAAqCC,SAArC,CAAgDC,UAAhD,CAA4D,CAC1D,GAAIC,CAAAA,KAAK,CAAGF,SAAS,CAACG,MAAtB,CACIA,MAAM,CAAGD,KADb,CAEIE,YAAY,CAAG,CAACH,UAFpB,CAIA,GAAIH,MAAM,EAAI,IAAd,CAAoB,CAClB,MAAO,CAACK,MAAR,CACD,CACDL,MAAM,CAAGO,MAAM,CAACP,MAAD,CAAf,CACA,MAAOI,KAAK,EAAZ,CAAgB,CACd,GAAII,CAAAA,IAAI,CAAGN,SAAS,CAACE,KAAD,CAApB,CACA,GAAKE,YAAY,EAAIE,IAAI,CAAC,CAAD,CAArB,CACIA,IAAI,CAAC,CAAD,CAAJ,GAAYR,MAAM,CAACQ,IAAI,CAAC,CAAD,CAAL,CADtB,CAEI,EAAEA,IAAI,CAAC,CAAD,CAAJ,EAAWR,CAAAA,MAAb,CAFR,CAGM,CACJ,MAAO,MAAP,CACD,CACF,CACD,MAAO,EAAEI,KAAF,CAAUC,MAAjB,CAAyB,CACvBG,IAAI,CAAGN,SAAS,CAACE,KAAD,CAAhB,CACA,GAAIK,CAAAA,GAAG,CAAGD,IAAI,CAAC,CAAD,CAAd,CACIE,QAAQ,CAAGV,MAAM,CAACS,GAAD,CADrB,CAEIE,QAAQ,CAAGH,IAAI,CAAC,CAAD,CAFnB,CAIA,GAAIF,YAAY,EAAIE,IAAI,CAAC,CAAD,CAAxB,CAA6B,CAC3B,GAAIE,QAAQ,GAAKE,SAAb,EAA0B,EAAEH,GAAG,GAAIT,CAAAA,MAAT,CAA9B,CAAgD,CAC9C,MAAO,MAAP,CACD,CACF,CAJD,IAIO,CACL,GAAIa,CAAAA,KAAK,CAAG,GAAInB,CAAAA,KAAJ,EAAZ,CACA,GAAIS,UAAJ,CAAgB,CACd,GAAIW,CAAAA,MAAM,CAAGX,UAAU,CAACO,QAAD,CAAWC,QAAX,CAAqBF,GAArB,CAA0BT,MAA1B,CAAkCC,MAAlC,CAA0CY,KAA1C,CAAvB,CACD,CACD,GAAI,EAAEC,MAAM,GAAKF,SAAX,CACEhB,WAAW,CAACe,QAAD,CAAWD,QAAX,CAAqBb,oBAAoB,CAAGC,sBAA5C,CAAoEK,UAApE,CAAgFU,KAAhF,CADb,CAEEC,MAFJ,CAAJ,CAGO,CACL,MAAO,MAAP,CACD,CACF,CACF,CACD,MAAO,KAAP,CACD,CAEDC,MAAM,CAACC,OAAP,CAAiBjB,WAAjB","sourcesContent":["var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n"]},"metadata":{},"sourceType":"module"}