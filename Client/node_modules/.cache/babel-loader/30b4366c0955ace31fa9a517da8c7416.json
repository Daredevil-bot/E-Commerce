{"ast":null,"code":"var baseGetTag=require('./_baseGetTag'),isLength=require('./isLength'),isObjectLike=require('./isObjectLike');/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',boolTag='[object Boolean]',dateTag='[object Date]',errorTag='[object Error]',funcTag='[object Function]',mapTag='[object Map]',numberTag='[object Number]',objectTag='[object Object]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',weakMapTag='[object WeakMap]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}module.exports=baseIsTypedArray;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_baseIsTypedArray.js"],"names":["baseGetTag","require","isLength","isObjectLike","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","value","length","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,UAAU,CAAGC,OAAO,CAAC,eAAD,CAAxB,CACIC,QAAQ,CAAGD,OAAO,CAAC,YAAD,CADtB,CAEIE,YAAY,CAAGF,OAAO,CAAC,gBAAD,CAF1B,CAIA,2CACA,GAAIG,CAAAA,OAAO,CAAG,oBAAd,CACIC,QAAQ,CAAG,gBADf,CAEIC,OAAO,CAAG,kBAFd,CAGIC,OAAO,CAAG,eAHd,CAIIC,QAAQ,CAAG,gBAJf,CAKIC,OAAO,CAAG,mBALd,CAMIC,MAAM,CAAG,cANb,CAOIC,SAAS,CAAG,iBAPhB,CAQIC,SAAS,CAAG,iBARhB,CASIC,SAAS,CAAG,iBAThB,CAUIC,MAAM,CAAG,cAVb,CAWIC,SAAS,CAAG,iBAXhB,CAYIC,UAAU,CAAG,kBAZjB,CAcA,GAAIC,CAAAA,cAAc,CAAG,sBAArB,CACIC,WAAW,CAAG,mBADlB,CAEIC,UAAU,CAAG,uBAFjB,CAGIC,UAAU,CAAG,uBAHjB,CAIIC,OAAO,CAAG,oBAJd,CAKIC,QAAQ,CAAG,qBALf,CAMIC,QAAQ,CAAG,qBANf,CAOIC,QAAQ,CAAG,qBAPf,CAQIC,eAAe,CAAG,4BARtB,CASIC,SAAS,CAAG,sBAThB,CAUIC,SAAS,CAAG,sBAVhB,CAYA,6DACA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CACAA,cAAc,CAACT,UAAD,CAAd,CAA6BS,cAAc,CAACR,UAAD,CAAd,CAC7BQ,cAAc,CAACP,OAAD,CAAd,CAA0BO,cAAc,CAACN,QAAD,CAAd,CAC1BM,cAAc,CAACL,QAAD,CAAd,CAA2BK,cAAc,CAACJ,QAAD,CAAd,CAC3BI,cAAc,CAACH,eAAD,CAAd,CAAkCG,cAAc,CAACF,SAAD,CAAd,CAClCE,cAAc,CAACD,SAAD,CAAd,CAA4B,IAJ5B,CAKAC,cAAc,CAACxB,OAAD,CAAd,CAA0BwB,cAAc,CAACvB,QAAD,CAAd,CAC1BuB,cAAc,CAACX,cAAD,CAAd,CAAiCW,cAAc,CAACtB,OAAD,CAAd,CACjCsB,cAAc,CAACV,WAAD,CAAd,CAA8BU,cAAc,CAACrB,OAAD,CAAd,CAC9BqB,cAAc,CAACpB,QAAD,CAAd,CAA2BoB,cAAc,CAACnB,OAAD,CAAd,CAC3BmB,cAAc,CAAClB,MAAD,CAAd,CAAyBkB,cAAc,CAACjB,SAAD,CAAd,CACzBiB,cAAc,CAAChB,SAAD,CAAd,CAA4BgB,cAAc,CAACf,SAAD,CAAd,CAC5Be,cAAc,CAACd,MAAD,CAAd,CAAyBc,cAAc,CAACb,SAAD,CAAd,CACzBa,cAAc,CAACZ,UAAD,CAAd,CAA6B,KAP7B,CASA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASa,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC/B,MAAO3B,CAAAA,YAAY,CAAC2B,KAAD,CAAZ,EACL5B,QAAQ,CAAC4B,KAAK,CAACC,MAAP,CADH,EACqB,CAAC,CAACH,cAAc,CAAC5B,UAAU,CAAC8B,KAAD,CAAX,CAD5C,CAED,CAEDE,MAAM,CAACC,OAAP,CAAiBJ,gBAAjB","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n"]},"metadata":{},"sourceType":"module"}