{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\ecommerce project\\\\ecommerce\\\\ecommerce-app\\\\src\\\\routes\\\\AdminRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Navigate } from 'react-router-dom';\nimport History from '../pages/user/History';\nimport AdminDashboard from '../pages/admin/AdminDashboard';\nimport { currentAdmin } from '../functions/currentUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminRoutes = () => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  })); //this how get the user from redux state\n\n  const [ok, setok] = useState(false);\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token).then(res => {\n        console.log(\"current admin logged in\");\n        setok(true);\n      }).catch(err => {\n        setok(false);\n        console.log(err);\n      });\n    }\n  });\n  return ok ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 16\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 36\n  }, this);\n};\n\n_s(AdminRoutes, \"PfG4FaKBidg4BWw7313FM6rPdcE=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoutes;\nexport default AdminRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoutes\");","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/src/routes/AdminRoutes.js"],"names":["React","useEffect","useState","useSelector","Route","useNavigate","useLocation","Navigate","History","AdminDashboard","currentAdmin","AdminRoutes","user","state","ok","setok","token","then","res","console","log","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;AAKA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA;AAAD,MAAOT,WAAW,CAAEU,KAAD,KAAW,EAAC,GAAGA;AAAJ,GAAX,CAAD,CAAxB,CADsB,CAC6B;;AACnD,QAAM,CAACC,EAAD,EAAIC,KAAJ,IAAWb,QAAQ,CAAC,KAAD,CAAzB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACb,QAAGW,IAAI,IAAIA,IAAI,CAACI,KAAhB,EAAsB;AAClBN,MAAAA,YAAY,CAACE,IAAI,CAACI,KAAN,CAAZ,CACCC,IADD,CACOC,GAAD,IAAO;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAL,QAAAA,KAAK,CAAC,IAAD,CAAL;AACH,OAJD,EAKCM,KALD,CAKOC,GAAG,IAAE;AACRP,QAAAA,KAAK,CAAC,KAAD,CAAL;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OARD;AASH;AACD,GAZQ,CAAT;AAcA,SAAOR,EAAE,gBAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAF,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/B;AAKH,CAtBD;;GAAMH,W;UACWR,W;;;KADXQ,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route,useNavigate } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Navigate } from 'react-router-dom';\r\nimport History from '../pages/user/History';\r\nimport AdminDashboard from '../pages/admin/AdminDashboard';\r\nimport { currentAdmin } from '../functions/currentUser';\r\n\r\n\r\n\r\n\r\nconst AdminRoutes = () => {\r\n    const {user}=useSelector((state)=> ({...state}))   //this how get the user from redux state\r\n    const [ok,setok]=useState(false)\r\n    useEffect(()=>{\r\n     if(user && user.token){\r\n         currentAdmin(user.token)\r\n         .then((res)=>{\r\n             console.log(\"current admin logged in\")\r\n             setok(true)\r\n         })\r\n         .catch(err=>{\r\n             setok(false)\r\n             console.log(err)\r\n         })\r\n     }\r\n    })\r\n    \r\n    return ok? <AdminDashboard/> : <h1>Loading</h1>\r\n\r\n    \r\n        \r\n    \r\n}\r\n  \r\n\r\n\r\nexport default AdminRoutes\r\n\r\n"]},"metadata":{},"sourceType":"module"}