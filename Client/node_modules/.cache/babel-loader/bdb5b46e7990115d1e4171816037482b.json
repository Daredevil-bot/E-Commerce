{"ast":null,"code":"var eq=require('./eq'),isArrayLike=require('./isArrayLike'),isIndex=require('./_isIndex'),isObject=require('./isObject');/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index;if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}module.exports=isIterateeCall;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_isIterateeCall.js"],"names":["eq","require","isArrayLike","isIndex","isObject","isIterateeCall","value","index","object","type","length","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,EAAE,CAAGC,OAAO,CAAC,MAAD,CAAhB,CACIC,WAAW,CAAGD,OAAO,CAAC,eAAD,CADzB,CAEIE,OAAO,CAAGF,OAAO,CAAC,YAAD,CAFrB,CAGIG,QAAQ,CAAGH,OAAO,CAAC,YAAD,CAHtB,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASI,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,KAA/B,CAAsCC,MAAtC,CAA8C,CAC5C,GAAI,CAACJ,QAAQ,CAACI,MAAD,CAAb,CAAuB,CACrB,MAAO,MAAP,CACD,CACD,GAAIC,CAAAA,IAAI,CAAG,MAAOF,CAAAA,KAAlB,CACA,GAAIE,IAAI,EAAI,QAAR,CACKP,WAAW,CAACM,MAAD,CAAX,EAAuBL,OAAO,CAACI,KAAD,CAAQC,MAAM,CAACE,MAAf,CADnC,CAEKD,IAAI,EAAI,QAAR,EAAoBF,KAAK,GAAIC,CAAAA,MAFtC,CAGM,CACJ,MAAOR,CAAAA,EAAE,CAACQ,MAAM,CAACD,KAAD,CAAP,CAAgBD,KAAhB,CAAT,CACD,CACD,MAAO,MAAP,CACD,CAEDK,MAAM,CAACC,OAAP,CAAiBP,cAAjB","sourcesContent":["var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"]},"metadata":{},"sourceType":"module"}