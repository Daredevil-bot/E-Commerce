{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\asus\\\\ecommerce project\\\\ecommerce\\\\ecommerce-app\\\\server\\\\Client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";import _classCallCheck from\"C:\\\\Users\\\\asus\\\\ecommerce project\\\\ecommerce\\\\ecommerce-app\\\\server\\\\Client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\asus\\\\ecommerce project\\\\ecommerce\\\\ecommerce-app\\\\server\\\\Client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";var _ERRORS;import{ErrorFactory,contains,deepExtend,createSubscribe,isBrowser}from'@firebase/util';import{Component}from'@firebase/component';import*as modularAPIs from'@firebase/app';import{_addComponent as _addComponent2,deleteApp,_DEFAULT_ENTRY_NAME,_addOrOverwriteComponent as _addOrOverwriteComponent2,registerVersion}from'@firebase/app';import{Logger}from'@firebase/logger';/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */var FirebaseAppImpl=/*#__PURE__*/function(){function FirebaseAppImpl(_delegate,firebase){var _this=this;_classCallCheck(this,FirebaseAppImpl);this._delegate=_delegate;this.firebase=firebase;// add itself to container\n_addComponent2(_delegate,new Component('app-compat',function(){return _this;},\"PUBLIC\"/* PUBLIC */));this.container=_delegate.container;}_createClass(FirebaseAppImpl,[{key:\"automaticDataCollectionEnabled\",get:function get(){return this._delegate.automaticDataCollectionEnabled;},set:function set(val){this._delegate.automaticDataCollectionEnabled=val;}},{key:\"name\",get:function get(){return this._delegate.name;}},{key:\"options\",get:function get(){return this._delegate.options;}},{key:\"delete\",value:function _delete(){var _this2=this;return new Promise(function(resolve){_this2._delegate.checkDestroyed();resolve();}).then(function(){_this2.firebase.INTERNAL.removeApp(_this2.name);return deleteApp(_this2._delegate);});}/**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */},{key:\"_getService\",value:function _getService(name){var instanceIdentifier=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_DEFAULT_ENTRY_NAME;var _a;this._delegate.checkDestroyed();// Initialize instance if InstatiationMode is `EXPLICIT`.\nvar provider=this._delegate.container.getProvider(name);if(!provider.isInitialized()&&((_a=provider.getComponent())===null||_a===void 0?void 0:_a.instantiationMode)===\"EXPLICIT\"/* EXPLICIT */){provider.initialize();}// getImmediate will always succeed because _getService is only called for registered components.\nreturn provider.getImmediate({identifier:instanceIdentifier});}/**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */},{key:\"_removeServiceInstance\",value:function _removeServiceInstance(name){var instanceIdentifier=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_DEFAULT_ENTRY_NAME;this._delegate.container// eslint-disable-next-line @typescript-eslint/no-explicit-any\n.getProvider(name).clearInstance(instanceIdentifier);}/**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */},{key:\"_addComponent\",value:function _addComponent(component){_addComponent2(this._delegate,component);}},{key:\"_addOrOverwriteComponent\",value:function _addOrOverwriteComponent(component){_addOrOverwriteComponent2(this._delegate,component);}},{key:\"toJSON\",value:function toJSON(){return{name:this.name,automaticDataCollectionEnabled:this.automaticDataCollectionEnabled,options:this.options};}}]);return FirebaseAppImpl;}();// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ERRORS=(_ERRORS={},_defineProperty(_ERRORS,\"no-app\"/* NO_APP */,\"No Firebase App '{$appName}' has been created - \"+'call Firebase App.initializeApp()'),_defineProperty(_ERRORS,\"invalid-app-argument\"/* INVALID_APP_ARGUMENT */,'firebase.{$appName}() takes either no argument or a '+'Firebase App instance.'),_ERRORS);var ERROR_FACTORY=new ErrorFactory('app-compat','Firebase',ERRORS);/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */function createFirebaseNamespaceCore(firebaseAppImpl){var apps={};// // eslint-disable-next-line @typescript-eslint/no-explicit-any\n// const components = new Map<string, Component<any>>();\n// A namespace is a plain JavaScript Object.\nvar namespace={// Hack to prevent Babel from modifying the object returned\n// as the firebase namespace.\n// @ts-ignore\n__esModule:true,initializeApp:initializeAppCompat,// @ts-ignore\napp:app,registerVersion:modularAPIs.registerVersion,setLogLevel:modularAPIs.setLogLevel,onLog:modularAPIs.onLog,// @ts-ignore\napps:null,SDK_VERSION:modularAPIs.SDK_VERSION,INTERNAL:{registerComponent:registerComponentCompat,removeApp:removeApp,useAsService:useAsService,modularAPIs:modularAPIs}};// Inject a circular default export to allow Babel users who were previously\n// using:\n//\n//   import firebase from 'firebase';\n//   which becomes: var firebase = require('firebase').default;\n//\n// instead of\n//\n//   import * as firebase from 'firebase';\n//   which becomes: var firebase = require('firebase');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnamespace['default']=namespace;// firebase.apps is a read-only getter.\nObject.defineProperty(namespace,'apps',{get:getApps});/**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */function removeApp(name){delete apps[name];}/**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */function app(name){name=name||modularAPIs._DEFAULT_ENTRY_NAME;if(!contains(apps,name)){throw ERROR_FACTORY.create(\"no-app\"/* NO_APP */,{appName:name});}return apps[name];}// @ts-ignore\napp['App']=firebaseAppImpl;/**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */function initializeAppCompat(options){var rawConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var app=modularAPIs.initializeApp(options,rawConfig);if(contains(apps,app.name)){return apps[app.name];}var appCompat=new firebaseAppImpl(app,namespace);apps[app.name]=appCompat;return appCompat;}/*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */function getApps(){// Make a copy so caller cannot mutate the apps list.\nreturn Object.keys(apps).map(function(name){return apps[name];});}function registerComponentCompat(component){var componentName=component.name;var componentNameWithoutCompat=componentName.replace('-compat','');if(modularAPIs._registerComponent(component)&&component.type===\"PUBLIC\"/* PUBLIC */){// create service namespace for public components\n// The Service namespace is an accessor function ...\nvar serviceNamespace=function serviceNamespace(){var appArg=arguments.length>0&&arguments[0]!==undefined?arguments[0]:app();// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(typeof appArg[componentNameWithoutCompat]!=='function'){// Invalid argument.\n// This happens in the following case: firebase.storage('gs:/')\nthrow ERROR_FACTORY.create(\"invalid-app-argument\"/* INVALID_APP_ARGUMENT */,{appName:componentName});}// Forward service instance lookup to the FirebaseApp.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn appArg[componentNameWithoutCompat]();};// ... and a container for service-level properties.\nif(component.serviceProps!==undefined){deepExtend(serviceNamespace,component.serviceProps);}// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnamespace[componentNameWithoutCompat]=serviceNamespace;// Patch the FirebaseAppImpl prototype\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfirebaseAppImpl.prototype[componentNameWithoutCompat]=// TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n// option added to the no-explicit-any rule when ESlint releases it.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction(){var serviceFxn=this._getService.bind(this,componentName);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return serviceFxn.apply(this,component.multipleInstances?args:[]);};}return component.type===\"PUBLIC\"/* PUBLIC */?// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnamespace[componentNameWithoutCompat]:null;}// Map the requested service to a registered service name\n// (used to map auth to serverAuth service when needed).\nfunction useAsService(app,name){if(name==='serverAuth'){return null;}var useService=name;return useService;}return namespace;}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */function createFirebaseNamespace(){var namespace=createFirebaseNamespaceCore(FirebaseAppImpl);namespace.INTERNAL=Object.assign(Object.assign({},namespace.INTERNAL),{createFirebaseNamespace:createFirebaseNamespace,extendNamespace:extendNamespace,createSubscribe:createSubscribe,ErrorFactory:ErrorFactory,deepExtend:deepExtend});/**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */function extendNamespace(props){deepExtend(namespace,props);}return namespace;}var firebase$1=createFirebaseNamespace();/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var logger=new Logger('@firebase/app-compat');var name=\"@firebase/app-compat\";var version=\"0.1.12\";/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function registerCoreComponents(variant){// Register `app` package.\nregisterVersion(name,version,variant);}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(isBrowser()&&self.firebase!==undefined){logger.warn(\"\\n    Warning: Firebase is already defined in the global scope. Please make sure\\n    Firebase library is only loaded once.\\n  \");// eslint-disable-next-line\nvar sdkVersion=self.firebase.SDK_VERSION;if(sdkVersion&&sdkVersion.indexOf('LITE')>=0){logger.warn(\"\\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\\n    \");}}var firebase=firebase$1;registerCoreComponents();export{firebase as default};","map":{"version":3,"sources":["C:\\Users\\asus\\ecommerce project\\ecommerce\\ecommerce-app\\server\\client\\src\\node_modules\\@firebase\\app-compat\\src\\firebaseApp.ts","C:\\Users\\asus\\ecommerce project\\ecommerce\\ecommerce-app\\server\\client\\src\\node_modules\\@firebase\\app-compat\\src\\errors.ts","C:\\Users\\asus\\ecommerce project\\ecommerce\\ecommerce-app\\server\\client\\src\\node_modules\\@firebase\\app-compat\\src\\firebaseNamespaceCore.ts","C:\\Users\\asus\\ecommerce project\\ecommerce\\ecommerce-app\\server\\client\\src\\node_modules\\@firebase\\app-compat\\src\\firebaseNamespace.ts","C:\\Users\\asus\\ecommerce project\\ecommerce\\ecommerce-app\\server\\client\\src\\node_modules\\@firebase\\app-compat\\src\\logger.ts","C:\\Users\\asus\\ecommerce project\\ecommerce\\ecommerce-app\\server\\client\\src\\node_modules\\@firebase\\app-compat\\src\\registerCoreComponents.ts","C:\\Users\\asus\\ecommerce project\\ecommerce\\ecommerce-app\\server\\client\\src\\node_modules\\@firebase\\app-compat\\src\\index.ts"],"names":["firebase","firebaseNamespace"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseOptions } from './public-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstantiationMode,\n  Name\n} from '@firebase/component';\nimport {\n  deleteApp,\n  _addComponent,\n  _addOrOverwriteComponent,\n  _DEFAULT_ENTRY_NAME,\n  _FirebaseAppInternal as _FirebaseAppExp\n} from '@firebase/app';\nimport { _FirebaseService, _FirebaseNamespace } from './types';\nimport { Compat } from '@firebase/util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * The settable config flag for GDPR opt-in/opt-out\n   */\n  automaticDataCollectionEnabled: boolean;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n}\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n *\n * marked as internal because it references internal types exported from @firebase/app\n * @internal\n */\nexport class FirebaseAppImpl implements Compat<_FirebaseAppExp>, _FirebaseApp {\n  private container: ComponentContainer;\n\n  constructor(\n    readonly _delegate: _FirebaseAppExp,\n    private readonly firebase: _FirebaseNamespace\n  ) {\n    // add itself to container\n    _addComponent(\n      _delegate,\n      new Component('app-compat', () => this, ComponentType.PUBLIC)\n    );\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get options(): FirebaseOptions {\n    return this._delegate.options;\n  }\n\n  delete(): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._delegate.checkDestroyed();\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): _FirebaseService {\n    this._delegate.checkDestroyed();\n\n    // Initialize instance if InstatiationMode is `EXPLICIT`.\n    const provider = this._delegate.container.getProvider(name as Name);\n    if (\n      !provider.isInitialized() &&\n      provider.getComponent()?.instantiationMode === InstantiationMode.EXPLICIT\n    ) {\n      provider.initialize();\n    }\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown as _FirebaseService;\n  }\n\n  /**\n   * Remove a service instance from the cache, so we will create a new instance for this service\n   * when people try to get it again.\n   *\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\n   *\n   * @param name The service name\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\n   * @internal\n   */\n  _removeServiceInstance(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): void {\n    this._delegate.container\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name as any)\n      .clearInstance(instanceIdentifier);\n  }\n\n  /**\n   * @param component the component being added to this app's container\n   * @internal\n   */\n  _addComponent(component: Component): void {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component: Component): void {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n}\n\n// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app-compat',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   *\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-compat');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app';\n\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(variant?: string): void {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { isBrowser } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif (isBrowser() && (self as any).firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  // eslint-disable-next-line\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n"]},"metadata":{},"sourceType":"module"}