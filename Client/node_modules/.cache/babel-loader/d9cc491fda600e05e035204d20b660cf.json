{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */'use strict';var _assign=require('object-assign');// -- Inlined from fbjs --\nvar emptyObject={};if(process.env.NODE_ENV!=='production'){Object.freeze(emptyObject);}var validateFormat=function validateFormat(format){};if(process.env.NODE_ENV!=='production'){validateFormat=function validateFormat(format){if(format===undefined){throw new Error('invariant requires an error message argument');}};}function _invariant(condition,format,a,b,c,d,e,f){validateFormat(format);if(!condition){var error;if(format===undefined){error=new Error('Minified exception occurred; use the non-minified dev environment '+'for the full error message and additional helpful warnings.');}else{var args=[a,b,c,d,e,f];var argIndex=0;error=new Error(format.replace(/%s/g,function(){return args[argIndex++];}));error.name='Invariant Violation';}error.framesToPop=1;// we don't care about invariant's own frame\nthrow error;}}var warning=function warning(){};if(process.env.NODE_ENV!=='production'){var printWarning=function printWarning(format){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}var argIndex=0;var message='Warning: '+format.replace(/%s/g,function(){return args[argIndex++];});if(typeof console!=='undefined'){console.error(message);}try{// --- Welcome to debugging React ---\n// This error was thrown as a convenience so that you can use this stack\n// to find the callsite that caused this warning to fire.\nthrow new Error(message);}catch(x){}};warning=function warning(condition,format){if(format===undefined){throw new Error('`warning(condition, format, ...args)` requires a warning '+'message argument');}if(format.indexOf('Failed Composite propType: ')===0){return;// Ignore CompositeComponent proptype check.\n}if(!condition){for(var _len2=arguments.length,args=Array(_len2>2?_len2-2:0),_key2=2;_key2<_len2;_key2++){args[_key2-2]=arguments[_key2];}printWarning.apply(undefined,[format].concat(args));}};}// /-- Inlined from fbjs --\nvar MIXINS_KEY='mixins';// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn){return fn;}var ReactPropTypeLocationNames;if(process.env.NODE_ENV!=='production'){ReactPropTypeLocationNames={prop:'prop',context:'context',childContext:'child context'};}else{ReactPropTypeLocationNames={};}function factory(ReactComponent,isValidElement,ReactNoopUpdateQueue){/**\n   * Policies that describe methods in `ReactClassInterface`.\n   */var injectedMixins=[];/**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */var ReactClassInterface={/**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */mixins:'DEFINE_MANY',/**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */statics:'DEFINE_MANY',/**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */propTypes:'DEFINE_MANY',/**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */contextTypes:'DEFINE_MANY',/**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */childContextTypes:'DEFINE_MANY',// ==== Definition methods ====\n/**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */getDefaultProps:'DEFINE_MANY_MERGED',/**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */getInitialState:'DEFINE_MANY_MERGED',/**\n     * @return {object}\n     * @optional\n     */getChildContext:'DEFINE_MANY_MERGED',/**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */render:'DEFINE_ONCE',// ==== Delegate methods ====\n/**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */componentWillMount:'DEFINE_MANY',/**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */componentDidMount:'DEFINE_MANY',/**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */componentWillReceiveProps:'DEFINE_MANY',/**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */shouldComponentUpdate:'DEFINE_ONCE',/**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */componentWillUpdate:'DEFINE_MANY',/**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */componentDidUpdate:'DEFINE_MANY',/**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */componentWillUnmount:'DEFINE_MANY',/**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */UNSAFE_componentWillMount:'DEFINE_MANY',/**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */UNSAFE_componentWillReceiveProps:'DEFINE_MANY',/**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */UNSAFE_componentWillUpdate:'DEFINE_MANY',// ==== Advanced methods ====\n/**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */updateComponent:'OVERRIDE_BASE'};/**\n   * Similar to ReactClassInterface but for static methods.\n   */var ReactClassStaticInterface={/**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */getDerivedStateFromProps:'DEFINE_MANY_MERGED'};/**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */var RESERVED_SPEC_KEYS={displayName:function displayName(Constructor,_displayName){Constructor.displayName=_displayName;},mixins:function mixins(Constructor,_mixins){if(_mixins){for(var i=0;i<_mixins.length;i++){mixSpecIntoComponent(Constructor,_mixins[i]);}}},childContextTypes:function childContextTypes(Constructor,_childContextTypes){if(process.env.NODE_ENV!=='production'){validateTypeDef(Constructor,_childContextTypes,'childContext');}Constructor.childContextTypes=_assign({},Constructor.childContextTypes,_childContextTypes);},contextTypes:function contextTypes(Constructor,_contextTypes){if(process.env.NODE_ENV!=='production'){validateTypeDef(Constructor,_contextTypes,'context');}Constructor.contextTypes=_assign({},Constructor.contextTypes,_contextTypes);},/**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */getDefaultProps:function getDefaultProps(Constructor,_getDefaultProps){if(Constructor.getDefaultProps){Constructor.getDefaultProps=createMergedResultFunction(Constructor.getDefaultProps,_getDefaultProps);}else{Constructor.getDefaultProps=_getDefaultProps;}},propTypes:function propTypes(Constructor,_propTypes){if(process.env.NODE_ENV!=='production'){validateTypeDef(Constructor,_propTypes,'prop');}Constructor.propTypes=_assign({},Constructor.propTypes,_propTypes);},statics:function statics(Constructor,_statics){mixStaticSpecIntoComponent(Constructor,_statics);},autobind:function autobind(){}};function validateTypeDef(Constructor,typeDef,location){for(var propName in typeDef){if(typeDef.hasOwnProperty(propName)){// use a warning instead of an _invariant so components\n// don't show up in prod but only in __DEV__\nif(process.env.NODE_ENV!=='production'){warning(typeof typeDef[propName]==='function','%s: %s type `%s` is invalid; it must be a function, usually from '+'React.PropTypes.',Constructor.displayName||'ReactClass',ReactPropTypeLocationNames[location],propName);}}}}function validateMethodOverride(isAlreadyDefined,name){var specPolicy=ReactClassInterface.hasOwnProperty(name)?ReactClassInterface[name]:null;// Disallow overriding of base class methods unless explicitly allowed.\nif(ReactClassMixin.hasOwnProperty(name)){_invariant(specPolicy==='OVERRIDE_BASE','ReactClassInterface: You are attempting to override '+'`%s` from your class specification. Ensure that your method names '+'do not overlap with React methods.',name);}// Disallow defining methods more than once unless explicitly allowed.\nif(isAlreadyDefined){_invariant(specPolicy==='DEFINE_MANY'||specPolicy==='DEFINE_MANY_MERGED','ReactClassInterface: You are attempting to define '+'`%s` on your component more than once. This conflict may be due '+'to a mixin.',name);}}/**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */function mixSpecIntoComponent(Constructor,spec){if(!spec){if(process.env.NODE_ENV!=='production'){var typeofSpec=typeof spec;var isMixinValid=typeofSpec==='object'&&spec!==null;if(process.env.NODE_ENV!=='production'){warning(isMixinValid,\"%s: You're attempting to include a mixin that is either null \"+'or not an object. Check the mixins included by the component, '+'as well as any mixins they include themselves. '+'Expected object but got %s.',Constructor.displayName||'ReactClass',spec===null?null:typeofSpec);}}return;}_invariant(typeof spec!=='function',\"ReactClass: You're attempting to \"+'use a component class or function as a mixin. Instead, just use a '+'regular object.');_invariant(!isValidElement(spec),\"ReactClass: You're attempting to \"+'use a component as a mixin. Instead, just use a regular object.');var proto=Constructor.prototype;var autoBindPairs=proto.__reactAutoBindPairs;// By handling mixins before any other properties, we ensure the same\n// chaining order is applied to methods with DEFINE_MANY policy, whether\n// mixins are listed before or after these methods in the spec.\nif(spec.hasOwnProperty(MIXINS_KEY)){RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}for(var name in spec){if(!spec.hasOwnProperty(name)){continue;}if(name===MIXINS_KEY){// We have already handled mixins in a special case above.\ncontinue;}var property=spec[name];var isAlreadyDefined=proto.hasOwnProperty(name);validateMethodOverride(isAlreadyDefined,name);if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){RESERVED_SPEC_KEYS[name](Constructor,property);}else{// Setup methods on prototype:\n// The following member methods should not be automatically bound:\n// 1. Expected ReactClass methods (in the \"interface\").\n// 2. Overridden methods (that were mixed in).\nvar isReactClassMethod=ReactClassInterface.hasOwnProperty(name);var isFunction=typeof property==='function';var shouldAutoBind=isFunction&&!isReactClassMethod&&!isAlreadyDefined&&spec.autobind!==false;if(shouldAutoBind){autoBindPairs.push(name,property);proto[name]=property;}else{if(isAlreadyDefined){var specPolicy=ReactClassInterface[name];// These cases should already be caught by validateMethodOverride.\n_invariant(isReactClassMethod&&(specPolicy==='DEFINE_MANY_MERGED'||specPolicy==='DEFINE_MANY'),'ReactClass: Unexpected spec policy %s for key %s '+'when mixing in component specs.',specPolicy,name);// For methods which are defined more than once, call the existing\n// methods before calling the new property, merging if appropriate.\nif(specPolicy==='DEFINE_MANY_MERGED'){proto[name]=createMergedResultFunction(proto[name],property);}else if(specPolicy==='DEFINE_MANY'){proto[name]=createChainedFunction(proto[name],property);}}else{proto[name]=property;if(process.env.NODE_ENV!=='production'){// Add verbose displayName to the function, which helps when looking\n// at profiling tools.\nif(typeof property==='function'&&spec.displayName){proto[name].displayName=spec.displayName+'_'+name;}}}}}}}function mixStaticSpecIntoComponent(Constructor,statics){if(!statics){return;}for(var name in statics){var property=statics[name];if(!statics.hasOwnProperty(name)){continue;}var isReserved=(name in RESERVED_SPEC_KEYS);_invariant(!isReserved,'ReactClass: You are attempting to define a reserved '+'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it '+'as an instance property instead; it will still be accessible on the '+'constructor.',name);var isAlreadyDefined=(name in Constructor);if(isAlreadyDefined){var specPolicy=ReactClassStaticInterface.hasOwnProperty(name)?ReactClassStaticInterface[name]:null;_invariant(specPolicy==='DEFINE_MANY_MERGED','ReactClass: You are attempting to define '+'`%s` on your component more than once. This conflict may be '+'due to a mixin.',name);Constructor[name]=createMergedResultFunction(Constructor[name],property);return;}Constructor[name]=property;}}/**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */function mergeIntoWithNoDuplicateKeys(one,two){_invariant(one&&two&&typeof one==='object'&&typeof two==='object','mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');for(var key in two){if(two.hasOwnProperty(key)){_invariant(one[key]===undefined,'mergeIntoWithNoDuplicateKeys(): '+'Tried to merge two objects with the same key: `%s`. This conflict '+'may be due to a mixin; in particular, this may be caused by two '+'getInitialState() or getDefaultProps() methods returning objects '+'with clashing keys.',key);one[key]=two[key];}}return one;}/**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */function createMergedResultFunction(one,two){return function mergedResult(){var a=one.apply(this,arguments);var b=two.apply(this,arguments);if(a==null){return b;}else if(b==null){return a;}var c={};mergeIntoWithNoDuplicateKeys(c,a);mergeIntoWithNoDuplicateKeys(c,b);return c;};}/**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */function createChainedFunction(one,two){return function chainedFunction(){one.apply(this,arguments);two.apply(this,arguments);};}/**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */function bindAutoBindMethod(component,method){var boundMethod=method.bind(component);if(process.env.NODE_ENV!=='production'){boundMethod.__reactBoundContext=component;boundMethod.__reactBoundMethod=method;boundMethod.__reactBoundArguments=null;var componentName=component.constructor.displayName;var _bind=boundMethod.bind;boundMethod.bind=function(newThis){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}// User is trying to bind() an autobound method; we effectively will\n// ignore the value of \"this\" that the user is trying to use, so\n// let's warn.\nif(newThis!==component&&newThis!==null){if(process.env.NODE_ENV!=='production'){warning(false,'bind(): React component methods may only be bound to the '+'component instance. See %s',componentName);}}else if(!args.length){if(process.env.NODE_ENV!=='production'){warning(false,'bind(): You are binding a component method to the component. '+'React does this for you automatically in a high-performance '+'way, so you can safely remove this call. See %s',componentName);}return boundMethod;}var reboundMethod=_bind.apply(boundMethod,arguments);reboundMethod.__reactBoundContext=component;reboundMethod.__reactBoundMethod=method;reboundMethod.__reactBoundArguments=args;return reboundMethod;};}return boundMethod;}/**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */function bindAutoBindMethods(component){var pairs=component.__reactAutoBindPairs;for(var i=0;i<pairs.length;i+=2){var autoBindKey=pairs[i];var method=pairs[i+1];component[autoBindKey]=bindAutoBindMethod(component,method);}}var IsMountedPreMixin={componentDidMount:function componentDidMount(){this.__isMounted=true;}};var IsMountedPostMixin={componentWillUnmount:function componentWillUnmount(){this.__isMounted=false;}};/**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */var ReactClassMixin={/**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */replaceState:function replaceState(newState,callback){this.updater.enqueueReplaceState(this,newState,callback);},/**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */isMounted:function isMounted(){if(process.env.NODE_ENV!=='production'){warning(this.__didWarnIsMounted,'%s: isMounted is deprecated. Instead, make sure to clean up '+'subscriptions and pending requests in componentWillUnmount to '+'prevent memory leaks.',this.constructor&&this.constructor.displayName||this.name||'Component');this.__didWarnIsMounted=true;}return!!this.__isMounted;}};var ReactClassComponent=function ReactClassComponent(){};_assign(ReactClassComponent.prototype,ReactComponent.prototype,ReactClassMixin);/**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */function createClass(spec){// To keep our warnings more understandable, we'll use a little hack here to\n// ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n// unnecessarily identify a class without displayName as 'Constructor'.\nvar Constructor=identity(function(props,context,updater){// This constructor gets overridden by mocks. The argument is used\n// by mocks to assert on what gets mounted.\nif(process.env.NODE_ENV!=='production'){warning(this instanceof Constructor,'Something is calling a React component directly. Use a factory or '+'JSX instead. See: https://fb.me/react-legacyfactory');}// Wire up auto-binding\nif(this.__reactAutoBindPairs.length){bindAutoBindMethods(this);}this.props=props;this.context=context;this.refs=emptyObject;this.updater=updater||ReactNoopUpdateQueue;this.state=null;// ReactClasses doesn't have constructors. Instead, they use the\n// getInitialState and componentWillMount methods for initialization.\nvar initialState=this.getInitialState?this.getInitialState():null;if(process.env.NODE_ENV!=='production'){// We allow auto-mocks to proceed as if they're returning null.\nif(initialState===undefined&&this.getInitialState._isMockFunction){// This is probably bad practice. Consider warning here and\n// deprecating this convenience.\ninitialState=null;}}_invariant(typeof initialState==='object'&&!Array.isArray(initialState),'%s.getInitialState(): must return an object or null',Constructor.displayName||'ReactCompositeComponent');this.state=initialState;});Constructor.prototype=new ReactClassComponent();Constructor.prototype.constructor=Constructor;Constructor.prototype.__reactAutoBindPairs=[];injectedMixins.forEach(mixSpecIntoComponent.bind(null,Constructor));mixSpecIntoComponent(Constructor,IsMountedPreMixin);mixSpecIntoComponent(Constructor,spec);mixSpecIntoComponent(Constructor,IsMountedPostMixin);// Initialize the defaultProps property after all mixins have been merged.\nif(Constructor.getDefaultProps){Constructor.defaultProps=Constructor.getDefaultProps();}if(process.env.NODE_ENV!=='production'){// This is a tag to indicate that the use of these method names is ok,\n// since it's used with createClass. If it's not, then it's likely a\n// mistake so we'll warn you to use the static property, property\n// initializer or constructor respectively.\nif(Constructor.getDefaultProps){Constructor.getDefaultProps.isReactClassApproved={};}if(Constructor.prototype.getInitialState){Constructor.prototype.getInitialState.isReactClassApproved={};}}_invariant(Constructor.prototype.render,'createClass(...): Class specification must implement a `render` method.');if(process.env.NODE_ENV!=='production'){warning(!Constructor.prototype.componentShouldUpdate,'%s has a method called '+'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+'The name is phrased as a question because the function is '+'expected to return a value.',spec.displayName||'A component');warning(!Constructor.prototype.componentWillRecieveProps,'%s has a method called '+'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',spec.displayName||'A component');warning(!Constructor.prototype.UNSAFE_componentWillRecieveProps,'%s has a method called UNSAFE_componentWillRecieveProps(). '+'Did you mean UNSAFE_componentWillReceiveProps()?',spec.displayName||'A component');}// Reduce time spent doing lookups by setting these on the prototype.\nfor(var methodName in ReactClassInterface){if(!Constructor.prototype[methodName]){Constructor.prototype[methodName]=null;}}return Constructor;}return createClass;}module.exports=factory;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/create-react-class/factory.js"],"names":["_assign","require","emptyObject","process","env","NODE_ENV","Object","freeze","validateFormat","format","undefined","Error","_invariant","condition","a","b","c","d","e","f","error","args","argIndex","replace","name","framesToPop","warning","printWarning","_len","arguments","length","Array","_key","message","console","x","indexOf","_len2","_key2","apply","concat","MIXINS_KEY","identity","fn","ReactPropTypeLocationNames","prop","context","childContext","factory","ReactComponent","isValidElement","ReactNoopUpdateQueue","injectedMixins","ReactClassInterface","mixins","statics","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","updateComponent","ReactClassStaticInterface","getDerivedStateFromProps","RESERVED_SPEC_KEYS","displayName","Constructor","i","mixSpecIntoComponent","validateTypeDef","createMergedResultFunction","mixStaticSpecIntoComponent","autobind","typeDef","location","propName","hasOwnProperty","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassMixin","spec","typeofSpec","isMixinValid","proto","prototype","autoBindPairs","__reactAutoBindPairs","property","isReactClassMethod","isFunction","shouldAutoBind","push","createChainedFunction","isReserved","mergeIntoWithNoDuplicateKeys","one","two","key","mergedResult","chainedFunction","bindAutoBindMethod","component","method","boundMethod","bind","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","constructor","_bind","newThis","reboundMethod","bindAutoBindMethods","pairs","autoBindKey","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","updater","enqueueReplaceState","isMounted","__didWarnIsMounted","ReactClassComponent","createClass","props","refs","state","initialState","_isMockFunction","isArray","forEach","defaultProps","isReactClassApproved","componentShouldUpdate","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","methodName","module","exports"],"mappings":"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CAwDxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,eAAe,CAAE,oBAtEO,CAwExB;AACJ;AACA;AACA,OACIC,eAAe,CAAE,oBA5EO,CA8ExB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,MAAM,CAAE,aA7FgB,CA+FxB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA,OACIC,kBAAkB,CAAE,aAxGI,CA0GxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,iBAAiB,CAAE,aApHK,CAsHxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,yBAAyB,CAAE,aAzIH,CA2IxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,qBAAqB,CAAE,aA/JC,CAiKxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,mBAAmB,CAAE,aAhLG,CAkLxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,kBAAkB,CAAE,aA9LI,CAgMxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,oBAAoB,CAAE,aA3ME,CA6MxB;AACJ;AACA;AACA;AACA,OACIC,yBAAyB,CAAE,aAlNH,CAoNxB;AACJ;AACA;AACA;AACA,OACIC,gCAAgC,CAAE,aAzNV,CA2NxB;AACJ;AACA;AACA;AACA,OACIC,0BAA0B,CAAE,aAhOJ,CAkOxB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIC,eAAe,CAAE,eA9OO,CAA1B,CAiPA;AACF;AACA,KACE,GAAIC,CAAAA,yBAAyB,CAAG,CAC9B;AACJ;AACA;AACA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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\n// -- Inlined from fbjs --\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction _invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nvar warning = function(){};\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\n// /-- Inlined from fbjs --\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Similar to ReactClassInterface but for static methods.\n   */\n  var ReactClassStaticInterface = {\n    /**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */\n    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isAlreadyDefined = name in Constructor;\n      if (isAlreadyDefined) {\n        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)\n          ? ReactClassStaticInterface[name]\n          : null;\n\n        _invariant(\n          specPolicy === 'DEFINE_MANY_MERGED',\n          'ReactClass: You are attempting to define ' +\n            '`%s` on your component more than once. This conflict may be ' +\n            'due to a mixin.',\n          name\n        );\n\n        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n\n        return;\n      }\n\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.UNSAFE_componentWillRecieveProps,\n        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +\n          'Did you mean UNSAFE_componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n"]},"metadata":{},"sourceType":"module"}