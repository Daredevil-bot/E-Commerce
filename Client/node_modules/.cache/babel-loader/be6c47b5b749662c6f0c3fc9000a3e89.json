{"ast":null,"code":"var isFunction=require('./isFunction'),isMasked=require('./_isMasked'),isObject=require('./isObject'),toSource=require('./_toSource');/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */var reRegExpChar=/[\\\\^$.*+?()[\\]{}|]/g;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\\[object .+?Constructor\\]$/;/** Used for built-in method references. */var funcProto=Function.prototype,objectProto=Object.prototype;/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,'$1.*?')+'$');/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}module.exports=baseIsNative;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_baseIsNative.js"],"names":["isFunction","require","isMasked","isObject","toSource","reRegExpChar","reIsHostCtor","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","reIsNative","RegExp","call","replace","baseIsNative","value","pattern","test","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,UAAU,CAAGC,OAAO,CAAC,cAAD,CAAxB,CACIC,QAAQ,CAAGD,OAAO,CAAC,aAAD,CADtB,CAEIE,QAAQ,CAAGF,OAAO,CAAC,YAAD,CAFtB,CAGIG,QAAQ,CAAGH,OAAO,CAAC,aAAD,CAHtB,CAKA;AACA;AACA;AACA,GACA,GAAII,CAAAA,YAAY,CAAG,qBAAnB,CAEA,iDACA,GAAIC,CAAAA,YAAY,CAAG,6BAAnB,CAEA,2CACA,GAAIC,CAAAA,SAAS,CAAGC,QAAQ,CAACC,SAAzB,CACIC,WAAW,CAAGC,MAAM,CAACF,SADzB,CAGA,0DACA,GAAIG,CAAAA,YAAY,CAAGL,SAAS,CAACM,QAA7B,CAEA,gDACA,GAAIC,CAAAA,cAAc,CAAGJ,WAAW,CAACI,cAAjC,CAEA,4CACA,GAAIC,CAAAA,UAAU,CAAGC,MAAM,CAAC,IACtBJ,YAAY,CAACK,IAAb,CAAkBH,cAAlB,EAAkCI,OAAlC,CAA0Cb,YAA1C,CAAwD,MAAxD,EACCa,OADD,CACS,wDADT,CACmE,OADnE,CADsB,CAEwD,GAFzD,CAAvB,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,GAAI,CAACjB,QAAQ,CAACiB,KAAD,CAAT,EAAoBlB,QAAQ,CAACkB,KAAD,CAAhC,CAAyC,CACvC,MAAO,MAAP,CACD,CACD,GAAIC,CAAAA,OAAO,CAAGrB,UAAU,CAACoB,KAAD,CAAV,CAAoBL,UAApB,CAAiCT,YAA/C,CACA,MAAOe,CAAAA,OAAO,CAACC,IAAR,CAAalB,QAAQ,CAACgB,KAAD,CAArB,CAAP,CACD,CAEDG,MAAM,CAACC,OAAP,CAAiBL,YAAjB","sourcesContent":["var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"]},"metadata":{},"sourceType":"module"}