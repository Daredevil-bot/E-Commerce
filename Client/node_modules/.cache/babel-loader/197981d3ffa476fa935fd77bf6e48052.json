{"ast":null,"code":"var ListCache=require('./_ListCache'),Map=require('./_Map'),MapCache=require('./_MapCache');/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}module.exports=stackSet;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_stackSet.js"],"names":["ListCache","require","Map","MapCache","LARGE_ARRAY_SIZE","stackSet","key","value","data","__data__","pairs","length","push","size","set","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,SAAS,CAAGC,OAAO,CAAC,cAAD,CAAvB,CACIC,GAAG,CAAGD,OAAO,CAAC,QAAD,CADjB,CAEIE,QAAQ,CAAGF,OAAO,CAAC,aAAD,CAFtB,CAIA,4DACA,GAAIG,CAAAA,gBAAgB,CAAG,GAAvB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,QAAT,CAAkBC,GAAlB,CAAuBC,KAAvB,CAA8B,CAC5B,GAAIC,CAAAA,IAAI,CAAG,KAAKC,QAAhB,CACA,GAAID,IAAI,WAAYR,CAAAA,SAApB,CAA+B,CAC7B,GAAIU,CAAAA,KAAK,CAAGF,IAAI,CAACC,QAAjB,CACA,GAAI,CAACP,GAAD,EAASQ,KAAK,CAACC,MAAN,CAAeP,gBAAgB,CAAG,CAA/C,CAAmD,CACjDM,KAAK,CAACE,IAAN,CAAW,CAACN,GAAD,CAAMC,KAAN,CAAX,EACA,KAAKM,IAAL,CAAY,EAAEL,IAAI,CAACK,IAAnB,CACA,MAAO,KAAP,CACD,CACDL,IAAI,CAAG,KAAKC,QAAL,CAAgB,GAAIN,CAAAA,QAAJ,CAAaO,KAAb,CAAvB,CACD,CACDF,IAAI,CAACM,GAAL,CAASR,GAAT,CAAcC,KAAd,EACA,KAAKM,IAAL,CAAYL,IAAI,CAACK,IAAjB,CACA,MAAO,KAAP,CACD,CAEDE,MAAM,CAACC,OAAP,CAAiBX,QAAjB","sourcesContent":["var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n"]},"metadata":{},"sourceType":"module"}