{"ast":null,"code":"var baseGetTag=require('./_baseGetTag'),isObject=require('./isObject');/** `Object#toString` result references. */var asyncTag='[object AsyncFunction]',funcTag='[object Function]',genTag='[object GeneratorFunction]',proxyTag='[object Proxy]';/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator\n// in Safari 9 which returns 'object' for typed arrays and other constructors.\nvar tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}module.exports=isFunction;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/isFunction.js"],"names":["baseGetTag","require","isObject","asyncTag","funcTag","genTag","proxyTag","isFunction","value","tag","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,UAAU,CAAGC,OAAO,CAAC,eAAD,CAAxB,CACIC,QAAQ,CAAGD,OAAO,CAAC,YAAD,CADtB,CAGA,2CACA,GAAIE,CAAAA,QAAQ,CAAG,wBAAf,CACIC,OAAO,CAAG,mBADd,CAEIC,MAAM,CAAG,4BAFb,CAGIC,QAAQ,CAAG,gBAHf,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,GAAI,CAACN,QAAQ,CAACM,KAAD,CAAb,CAAsB,CACpB,MAAO,MAAP,CACD,CACD;AACA;AACA,GAAIC,CAAAA,GAAG,CAAGT,UAAU,CAACQ,KAAD,CAApB,CACA,MAAOC,CAAAA,GAAG,EAAIL,OAAP,EAAkBK,GAAG,EAAIJ,MAAzB,EAAmCI,GAAG,EAAIN,QAA1C,EAAsDM,GAAG,EAAIH,QAApE,CACD,CAEDI,MAAM,CAACC,OAAP,CAAiBJ,UAAjB","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n"]},"metadata":{},"sourceType":"module"}