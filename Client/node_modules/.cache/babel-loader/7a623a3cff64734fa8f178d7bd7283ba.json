{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\ecommerce project\\\\ecommerce\\\\ecommerce-app\\\\src\\\\pages\\\\admin\\\\AdminDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AdminNav from '../../components/nav/AdminNav';\nimport { useEffect, useState } from 'react';\nimport { getProdutByCount } from '../../functions/product';\nimport AdminProductCard from '../../components/cards/AdminProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDashboard = () => {\n  _s();\n\n  const [products, setproducts] = useState([]);\n  useEffect(() => {\n    //I want to run the interval here, but it will only run once \n    //because of no dependencies. If i populate the dependencies, \n    //setTimeout will run more than once.\n    getProdutByCount(10).then(res => {\n      setproducts(res.data); //  console.log(products)\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"All Products \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [JSON.stringify(products), products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(AdminProductCard, {\n              product: product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 30\n            }, this)\n          }, product._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 26\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminDashboard, \"IlFxDGBS6niMiF1dAHMBpw++KGo=\");\n\n_c = AdminDashboard;\nexport default AdminDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/src/pages/admin/AdminDashboard.js"],"names":["React","AdminNav","useEffect","useState","getProdutByCount","AdminProductCard","AdminDashboard","products","setproducts","then","res","data","catch","err","console","log","JSON","stringify","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,OAAOC,gBAAP,MAA6B,yCAA7B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAuBL,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEhB;AACA;AACA;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB,CACCK,IADD,CACOC,GAAD,IAAO;AAETF,MAAAA,WAAW,CAACE,GAAG,CAACC,IAAL,CAAX,CAFS,CAGT;AAGH,KAPD,EAQCC,KARD,CAQQC,GAAD,IAAO;AAEVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAXD;AAaG,GAlBM,EAkBJ,EAlBI,CAAT;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAKG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,qBACIG,IAAI,CAACC,SAAL,CAAeV,QAAf,CADJ,EAEKA,QAAQ,CAACW,GAAT,CAAcC,OAAD,iBACV;AAAuB,YAAA,SAAS,EAAC,KAAjC;AAAA,mCAGI,QAAC,gBAAD;AAAkB,cAAA,OAAO,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA;AAHJ,aAAUA,OAAO,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,kBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CArDD;;GAAMd,c;;KAAAA,c;AAuDN,eAAeA,cAAf","sourcesContent":["import React from 'react'\r\nimport AdminNav from '../../components/nav/AdminNav'\r\nimport { useEffect,useState } from 'react'\r\nimport { getProdutByCount } from '../../functions/product'\r\n\r\nimport AdminProductCard from '../../components/cards/AdminProductCard'\r\n\r\nconst AdminDashboard = () => {\r\n    const[products,setproducts]=useState([])\r\n    useEffect(() => {\r\n        \r\n    //I want to run the interval here, but it will only run once \r\n    //because of no dependencies. If i populate the dependencies, \r\n    //setTimeout will run more than once.\r\n    getProdutByCount(10)\r\n    .then((res)=>{\r\n       \r\n        setproducts(res.data)\r\n        //  console.log(products)\r\n        \r\n\r\n    })\r\n    .catch((err)=>{\r\n       \r\n        console.log(err);\r\n    })\r\n\r\n      }, []);\r\n     \r\n          \r\n   \r\n\r\n   \r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n            <div className='row'>\r\n                <div className='col'>\r\n                  <AdminNav/>\r\n                </div>\r\n               \r\n               <div className='col-10'> \r\n               <h4 >All Products </h4>\r\n                 <div className='row'>\r\n                    {JSON.stringify(products)}\r\n                     {products.map((product)=>(\r\n                         <div key={product._id} className=\"col\">\r\n                             \r\n                             \r\n                             <AdminProductCard product={product}/>\r\n                         </div>\r\n                     ))}\r\n                 </div>\r\n\r\n                 </div>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n\r\n"]},"metadata":{},"sourceType":"module"}