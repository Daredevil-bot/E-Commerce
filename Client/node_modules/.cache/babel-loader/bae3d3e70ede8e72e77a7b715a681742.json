{"ast":null,"code":"var baseIteratee=require('./_baseIteratee'),isArrayLike=require('./isArrayLike'),keys=require('./keys');/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=baseIteratee(predicate,3);collection=keys(collection);predicate=function predicate(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined;};}module.exports=createFind;","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/server/client/src/node_modules/lodash/_createFind.js"],"names":["baseIteratee","require","isArrayLike","keys","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","Object","iteratee","key","index","undefined","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,YAAY,CAAGC,OAAO,CAAC,iBAAD,CAA1B,CACIC,WAAW,CAAGD,OAAO,CAAC,eAAD,CADzB,CAEIE,IAAI,CAAGF,OAAO,CAAC,QAAD,CAFlB,CAIA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASG,CAAAA,UAAT,CAAoBC,aAApB,CAAmC,CACjC,MAAO,UAASC,UAAT,CAAqBC,SAArB,CAAgCC,SAAhC,CAA2C,CAChD,GAAIC,CAAAA,QAAQ,CAAGC,MAAM,CAACJ,UAAD,CAArB,CACA,GAAI,CAACJ,WAAW,CAACI,UAAD,CAAhB,CAA8B,CAC5B,GAAIK,CAAAA,QAAQ,CAAGX,YAAY,CAACO,SAAD,CAAY,CAAZ,CAA3B,CACAD,UAAU,CAAGH,IAAI,CAACG,UAAD,CAAjB,CACAC,SAAS,CAAG,mBAASK,GAAT,CAAc,CAAE,MAAOD,CAAAA,QAAQ,CAACF,QAAQ,CAACG,GAAD,CAAT,CAAgBA,GAAhB,CAAqBH,QAArB,CAAf,CAAgD,CAA5E,CACD,CACD,GAAII,CAAAA,KAAK,CAAGR,aAAa,CAACC,UAAD,CAAaC,SAAb,CAAwBC,SAAxB,CAAzB,CACA,MAAOK,CAAAA,KAAK,CAAG,CAAC,CAAT,CAAaJ,QAAQ,CAACE,QAAQ,CAAGL,UAAU,CAACO,KAAD,CAAb,CAAuBA,KAAhC,CAArB,CAA8DC,SAArE,CACD,CATD,CAUD,CAEDC,MAAM,CAACC,OAAP,CAAiBZ,UAAjB","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n"]},"metadata":{},"sourceType":"module"}