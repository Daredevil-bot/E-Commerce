{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\ecommerce project\\\\ecommerce\\\\ecommerce-app\\\\src\\\\pages\\\\admin\\\\product\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Resizer from \"react-image-file-resizer\";\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Badge } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = _ref => {\n  _s();\n\n  let {\n    values,\n    setValues\n  } = _ref;\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n\n  const fileUploadAndResize = e => {\n    let files = e.target.files;\n    let allUploadedFiles = values.images;\n\n    if (files) {\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 720, 720, 'JPEG', 100, 0, uri => {\n          axios.post(`http://localhost:8000/api/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              authtoken: user ? user.token : \"\"\n            }\n          }).then(res => {\n            console.log('IMAGE UPLOAD RESPONSE DATA', res.data);\n            allUploadedFiles.push(res.data);\n            setValues({ ...values,\n              images: allUploadedFiles\n            });\n          }).catch(err => {\n            console.log(err);\n          });\n        }, \"base64\");\n      }\n    }\n  };\n\n  const handleImageRemove = public_id => {\n    axios.post(`http://localhost:8000/api/removeimage`, {\n      public_id\n    }, {\n      headers: {\n        authtoken: user ? user.token : ''\n      }\n    }).then(res => {\n      const {\n        images\n      } = values;\n      let filteredImages = images.filter(item => {\n        return item.public_id != public_id;\n      });\n      setValues({ ...values,\n        images: filteredImages\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row btn btn-primary\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Choose Files\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          accept: \"images/*\",\n          hidden: true,\n          onChange: fileUploadAndResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: values.images && values.images.map(image => /*#__PURE__*/_jsxDEV(Badge, {\n        count: \"X\",\n        onClick: () => handleImageRemove(image.public_id),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: image.url,\n          size: 120,\n          shape: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, image.public_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FileUpload, \"Jxgif+QfY7+MStbF+F1uZ9ypUGY=\", false, function () {\n  return [useSelector];\n});\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/asus/ecommerce project/ecommerce/ecommerce-app/src/pages/admin/product/FileUpload.js"],"names":["React","Resizer","axios","useSelector","Avatar","Badge","FileUpload","values","setValues","user","state","fileUploadAndResize","e","files","target","allUploadedFiles","images","i","length","imageFileResizer","uri","post","image","headers","authtoken","token","then","res","console","log","data","push","catch","err","handleImageRemove","public_id","filteredImages","filter","item","map","cursor","url"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux';\r\nimport {Avatar,Badge} from 'antd';\r\n\r\nconst FileUpload = ({values,setValues}) => {\r\n    const{user}=useSelector((state)=>({...state})) \r\n\r\n    const fileUploadAndResize=(e)=>{\r\n        let files=e.target.files;\r\n        let allUploadedFiles=values.images;\r\n\r\nif(files){\r\n        for(let i=0;i<files.length;i++){\r\n            Resizer.imageFileResizer(\r\n                files[i],\r\n                720,\r\n                720,\r\n                'JPEG',\r\n                100,\r\n                0,\r\n                 (uri)=>{\r\n                   \r\n                    axios.post(`http://localhost:8000/api/uploadimages`,{image:uri},{\r\n                        headers:{\r\n                            authtoken:user?user.token:\"\",\r\n                        },\r\n                    })    \r\n                    .then(res=>{\r\n                        console.log('IMAGE UPLOAD RESPONSE DATA',res.data)\r\n                        allUploadedFiles.push(res.data)\r\n                        setValues({...values,images:allUploadedFiles});\r\n                    })\r\n                    .catch((err)=>{\r\n                        console.log(err)\r\n                    })                  \r\n                },\"base64\"\r\n            );\r\n        }\r\n    }\r\n    };\r\n\r\n    const handleImageRemove=(public_id)=>{\r\n        axios.post(`http://localhost:8000/api/removeimage`,{public_id},{\r\n            headers:{\r\n                authtoken:user?user.token:''\r\n            }\r\n        })\r\n        .then(res=>{\r\n            const{images}=values;\r\n            let filteredImages=images.filter((item)=>{\r\n                return item.public_id!=public_id;\r\n            })\r\n            setValues({...values,images:filteredImages})\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n  return (\r\n      <>\r\n       \r\n    <div className='row btn btn-primary' >\r\n        <label> Choose Files\r\n            <input type='file'\r\n                    multiple\r\n                    accept='images/*'\r\n                    hidden\r\n                    onChange={fileUploadAndResize}\r\n            />\r\n        </label>\r\n    </div>\r\n    <div className='row'>\r\n            {values.images && values.images.map((image)=>(\r\n                <Badge count=\"X\" key={image.public_id} onClick={()=>handleImageRemove(image.public_id)}  \r\n                style={{cursor:\"pointer\" }}>\r\n                    <Avatar  src={image.url} size={120}\r\n                    shape=\"square\"/>\r\n                </Badge>\r\n            ))}\r\n        </div>\r\n\r\n    </>\r\n  )\r\n};\r\n\r\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}